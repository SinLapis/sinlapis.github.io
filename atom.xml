<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SinLapis的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sinlapis.github.io/"/>
  <updated>2021-03-03T02:50:12.463Z</updated>
  <id>http://sinlapis.github.io/</id>
  
  <author>
    <name>SinLapis</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用redis+lettuce实现消息队列和生产消费</title>
    <link href="http://sinlapis.github.io/2020/01/29/%E4%BD%BF%E7%94%A8redis-lettuce%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%92%8C%E7%94%9F%E4%BA%A7%E6%B6%88%E8%B4%B9/"/>
    <id>http://sinlapis.github.io/2020/01/29/使用redis-lettuce实现消息队列和生产消费/</id>
    <published>2020-01-29T01:05:52.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h2><p>使用Docker部署redis</p><pre class=" language-shell"><code class="language-shell">docker run --name redis-mq -d -p 6379:6379 redis redis-server --appendonly yes</code></pre><h2 id="创建stream和group"><a href="#创建stream和group" class="headerlink" title="创建stream和group"></a>创建stream和group</h2><p>安装redis-cli</p><pre class=" language-shell"><code class="language-shell">apt install -y redis-cli</code></pre><p>进入redis-cli</p><pre class=" language-shell"><code class="language-shell">redis-cli -h localhost -p 6379</code></pre><p>创建空的stream和对应的group</p><pre><code>xgroup create testTask testGroup $ mkstream</code></pre><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="配置依赖"><a href="#配置依赖" class="headerlink" title="配置依赖"></a>配置依赖</h2><p>使用lettuce作为redis连接库</p><pre class=" language-kotlin"><code class="language-kotlin">dependencies <span class="token punctuation">{</span>    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token function">kotlin</span><span class="token punctuation">(</span><span class="token string">"stdlib-jdk8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string">"io.lettuce:lettuce-core:5.2.1.RELEASE"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h2 id="生产者"><a href="#生产者" class="headerlink" title="生产者"></a>生产者</h2><pre class=" language-kotlin"><code class="language-kotlin"><span class="token keyword">fun</span> <span class="token function">consume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">val</span> client <span class="token operator">=</span> RedisClient<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">"redis://192.168.75.120:6379/0"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> connection <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> commands <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> consumer <span class="token operator">=</span> io<span class="token punctuation">.</span>lettuce<span class="token punctuation">.</span>core<span class="token punctuation">.</span>Consumer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">"testGroup"</span><span class="token punctuation">,</span> <span class="token string">"testTask"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> content <span class="token operator">=</span> commands<span class="token punctuation">.</span><span class="token function">xreadgroup</span><span class="token punctuation">(</span>        consumer<span class="token punctuation">,</span> XReadArgs<span class="token punctuation">.</span>StreamOffset<span class="token punctuation">.</span><span class="token function">lastConsumed</span><span class="token punctuation">(</span><span class="token string">"testTask"</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>    <span class="token function">println</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span>size<span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>c <span class="token keyword">in</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>k <span class="token keyword">in</span> c<span class="token punctuation">.</span>body<span class="token punctuation">.</span>keys<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"<span class="token interpolation variable">$k</span>: <span class="token interpolation"><span class="token delimiter variable">${</span>c<span class="token punctuation">.</span>body<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token delimiter variable">}</span></span>"</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="消费者"><a href="#消费者" class="headerlink" title="消费者"></a>消费者</h2><pre class=" language-kotlin"><code class="language-kotlin"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">val</span> client <span class="token operator">=</span> RedisClient<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">"redis://192.168.75.120:6379/0"</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> connection <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> commands <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> body <span class="token operator">=</span> HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">1</span><span class="token operator">..</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        body<span class="token punctuation">[</span>i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"test"</span>    <span class="token punctuation">}</span>    commands<span class="token punctuation">.</span><span class="token function">xadd</span><span class="token punctuation">(</span><span class="token string">"testTask"</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;h2 id=&quot;安装redis&quot;&gt;&lt;a href=&quot;#安装redis&quot; class=&quot;headerlink&quot; title=&quot;安装redis&quot;&gt;&lt;/
      
    
    </summary>
    
      <category term="redis" scheme="http://sinlapis.github.io/categories/redis/"/>
    
    
      <category term="kotlin" scheme="http://sinlapis.github.io/tags/kotlin/"/>
    
      <category term="redis" scheme="http://sinlapis.github.io/tags/redis/"/>
    
      <category term="lettuce" scheme="http://sinlapis.github.io/tags/lettuce/"/>
    
  </entry>
  
  <entry>
    <title>使用Gradle打包Kotlin代码以及所有依赖</title>
    <link href="http://sinlapis.github.io/2020/01/14/%E4%BD%BF%E7%94%A8Gradle%E6%89%93%E5%8C%85Kotlin%E4%BB%A3%E7%A0%81%E4%BB%A5%E5%8F%8A%E6%89%80%E6%9C%89%E4%BE%9D%E8%B5%96/"/>
    <id>http://sinlapis.github.io/2020/01/14/使用Gradle打包Kotlin代码以及所有依赖/</id>
    <published>2020-01-14T02:27:12.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <content type="html"><![CDATA[<p>使用插件<code>Shadow</code>进行打包。<code>build.gradle</code>如下：</p><pre class=" language-groovy"><code class="language-groovy">plugins <span class="token punctuation">{</span>    id <span class="token string">'org.jetbrains.kotlin.jvm'</span> version <span class="token string">'1.3.61'</span>    id <span class="token string">'com.github.johnrengelman.shadow'</span> version <span class="token string">'5.2.0'</span><span class="token punctuation">}</span>group <span class="token string">'org.example'</span>version <span class="token string">'1.0-SNAPSHOT'</span>repositories <span class="token punctuation">{</span>    <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">jcenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>dependencies <span class="token punctuation">{</span>    implementation <span class="token string">"org.jetbrains.kotlin:kotlin-stdlib-jdk8"</span>    implementation <span class="token string">"org.apache.kafka:kafka-clients:2.4.0"</span>    implementation <span class="token string">"org.apache.kafka:kafka-streams:2.4.0"</span>    implementation <span class="token string">"org.apache.logging.log4j:log4j-api:2.13.0"</span>    implementation <span class="token string">"org.apache.logging.log4j:log4j-core:2.13.0"</span>    implementation <span class="token string">"org.slf4j:slf4j-log4j12:1.7.30"</span><span class="token punctuation">}</span>compileKotlin <span class="token punctuation">{</span>    kotlinOptions<span class="token operator">.</span>jvmTarget <span class="token operator">=</span> <span class="token string">"1.8"</span><span class="token punctuation">}</span>compileTestKotlin <span class="token punctuation">{</span>    kotlinOptions<span class="token operator">.</span>jvmTarget <span class="token operator">=</span> <span class="token string">"1.8"</span><span class="token punctuation">}</span>jar <span class="token punctuation">{</span>    manifest <span class="token punctuation">{</span>        attributes <span class="token string">"Main-Class"</span><span class="token punctuation">:</span> <span class="token string">"org.example.testK8s.MainKt"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>之后执行下面的指令（或者在IDEA右侧的Gradle面板可以找到）进行打包：</p><pre class=" language-shell"><code class="language-shell">gradle shadowJar</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用插件&lt;code&gt;Shadow&lt;/code&gt;进行打包。&lt;code&gt;build.gradle&lt;/code&gt;如下：&lt;/p&gt;
&lt;pre class=&quot; language-groovy&quot;&gt;&lt;code class=&quot;language-groovy&quot;&gt;plugins &lt;span cl
      
    
    </summary>
    
      <category term="杂项" scheme="http://sinlapis.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="Gradle" scheme="http://sinlapis.github.io/tags/Gradle/"/>
    
      <category term="Kotlin" scheme="http://sinlapis.github.io/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>使用Java/Kotlin等外部消费者无法消费Kafka消息</title>
    <link href="http://sinlapis.github.io/2020/01/14/%E4%BD%BF%E7%94%A8Java-Kotlin%E7%AD%89%E5%A4%96%E9%83%A8%E6%B6%88%E8%B4%B9%E8%80%85%E6%97%A0%E6%B3%95%E6%B6%88%E8%B4%B9Kafka%E6%B6%88%E6%81%AF/"/>
    <id>http://sinlapis.github.io/2020/01/14/使用Java-Kotlin等外部消费者无法消费Kafka消息/</id>
    <published>2020-01-14T02:07:57.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>有一Kafka集群，在集群内机器上生产消费消息均正常，但是使用外部机器（未部署Kafka）无法消费。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>在Kafka配置<code>server.properties</code>中加入字段：</p><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">port</span><span class="token punctuation">=</span><span class="token attr-value">9092</span><span class="token attr-name">advertised.host.name</span><span class="token punctuation">=</span><span class="token attr-value">192.168.226.10</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;p&gt;有一Kafka集群，在集群内机器上生产消费消息均正常，但是使用外部机器（未部署Kafka）无法消费。&lt;/p&gt;
&lt;h1 id=&quot;解决&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="杂项" scheme="http://sinlapis.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="Kafka" scheme="http://sinlapis.github.io/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>使用K8s和Kafka实现工作队列的并行处理</title>
    <link href="http://sinlapis.github.io/2020/01/10/%E4%BD%BF%E7%94%A8K8s%E5%92%8CKafka%E5%AE%9E%E7%8E%B0%E5%B7%A5%E4%BD%9C%E9%98%9F%E5%88%97%E7%9A%84%E5%B9%B6%E8%A1%8C%E5%A4%84%E7%90%86/"/>
    <id>http://sinlapis.github.io/2020/01/10/使用K8s和Kafka实现工作队列的并行处理/</id>
    <published>2020-01-10T06:34:12.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用K3s搭建Kubernetes集群</title>
    <link href="http://sinlapis.github.io/2020/01/09/%E4%BD%BF%E7%94%A8K3s%E6%90%AD%E5%BB%BAKubernetes%E9%9B%86%E7%BE%A4/"/>
    <id>http://sinlapis.github.io/2020/01/09/使用K3s搭建Kubernetes集群/</id>
    <published>2020-01-09T03:07:46.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用K3s搭建Kubernetes集群"><a href="#使用K3s搭建Kubernetes集群" class="headerlink" title="使用K3s搭建Kubernetes集群"></a>使用K3s搭建Kubernetes集群</h1><p>主要参考<a href="https://blog.ilemonrain.com/docker/rancher-with-k3s.html" target="_blank" rel="noopener">你的第一次轻量级K8S体验 —— 记一次Rancher 2.2 + K3S集成部署过程</a></p><p>需要至少2台机器。</p><p>当前各软件版本为：</p><table><thead><tr><th>软件名</th><th>版本</th></tr></thead><tbody><tr><td>Docker</td><td>18.09.9</td></tr><tr><td>K3s</td><td>v1.17.0+k3s.1</td></tr><tr><td>rancher</td><td>v2.3.3</td></tr></tbody></table><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p>直接参考<a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" target="_blank" rel="noopener">官方文档</a></p><blockquote><p>安装依赖使<code>apt</code>可以使用HTTPS的仓库</p><pre class=" language-shell"><code class="language-shell">apt install -y \    apt-transport-https \    ca-certificates \    curl \    gnupg-agent \    software-properties-common</code></pre><p>添加Docker官方的GPG密钥</p><pre class=" language-shell"><code class="language-shell">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</code></pre><p>添加Docker稳定版仓库</p><pre class=" language-shell"><code class="language-shell">add-apt-repository \   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \   $(lsb_release -cs) \   stable"</code></pre><p>更新<code>apt</code>索引</p><pre class=" language-shell"><code class="language-shell">apt update</code></pre><p>安装Docker</p><pre class=" language-shell"><code class="language-shell">apt-get install -y docker-ce docker-ce-cli containerd.io</code></pre></blockquote><p>配置registry</p><pre class=" language-shell"><code class="language-shell">docker pull registry:2docker run -d -p 5000:5000 --restart=always --name registry \    -v /var/data:/var/lib/registry registry:2</code></pre><p>修改Docker配置<code>/etc/docker/daemon.json</code></p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>      <span class="token property">"insecure-registries"</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"192.168.226.11:5000"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h2 id="rancher安装"><a href="#rancher安装" class="headerlink" title="rancher安装"></a>rancher安装</h2><p>选择一台安装rancher server，这台不安装k3s，好像会有冲突。</p><pre class=" language-shell"><code class="language-shell">docker run -d -v /data/docker/rancher-server/var/lib/rancher/:/var/lib/rancher/ --restart=unless-stopped --name rancher-server -p 80:80 -p 443:443 rancher/rancher:stable</code></pre><p>之后访问<code>http://192.168.226.10/</code>（改成自己的ip）进行初始化部署。设定密码和地址后，可选切换语言。</p><p>选择<code>添加集群 -&gt; 导入</code>，输入集群名，然后点击<code>创建</code>。保存最后一条指令，记得在<code>kubectl</code>前添加<code>k3s</code>。</p><h2 id="k3s安装"><a href="#k3s安装" class="headerlink" title="k3s安装"></a>k3s安装</h2><p>到<a href="https://github.com/rancher/k3s/releases" target="_blank" rel="noopener">k3s - Releases</a>下载<code>k3s</code>文件（约50MB的那个），上传至<code>/usr/local/bin/</code>，并执行下面指令</p><pre class=" language-shell"><code class="language-shell">chmod +x /usr/local/bin/k3s</code></pre><p>下载<code>pause</code>镜像</p><pre class=" language-shell"><code class="language-shell">docker pull kubernetes/pause:latestdocker tag kubernetes/pause:latest k8s.gcr.io/pause</code></pre><p>执行官方安装脚本</p><pre class=" language-shell"><code class="language-shell">curl -sfL https://get.k3s.io | sh -</code></pre><p>配置容器引擎使用Docker</p><pre class=" language-shell"><code class="language-shell">vim /etc/systemd/system/multi-user.target.wants/k3s.service</code></pre><p>在文件中<code>ExecStart</code>字段最后一个<code>\</code>后添加一行，并填入<code>--docker</code>，类似下面</p><pre class=" language-ini"><code class="language-ini"><span class="token constant">ExecStart</span><span class="token attr-value"><span class="token punctuation">=</span>/usr/local/bin/k3s \</span>    server \    --docker</code></pre><p>保存配置并重启<code>k3s</code></p><pre class=" language-shell"><code class="language-shell">systemctl daemon-reloadsystemctl restart k3s</code></pre><p>执行之前保存的指令，注意不要直接使用下面的样例，主机地址和<code>yaml</code>文件名要使用刚才生成的。</p><pre class=" language-shell"><code class="language-shell">curl --insecure -sfL https://192.168.226.11/v3/import/nb4hcqpzsvggwhcsfgpj5vjss8s2wsqbhv82d72s68hx8cf6gfzhsj.yaml | k3s kubectl apply -f -</code></pre><p>稍等一会界面就会出现节点状态。</p><h2 id="容器执行测试"><a href="#容器执行测试" class="headerlink" title="容器执行测试"></a>容器执行测试</h2><p>参考<a href="https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/" target="_blank" rel="noopener">Kubernetes官方文档</a></p><p>先准备一个镜像</p><pre class=" language-shell"><code class="language-shell">docker pull busyboxdocker tag busybox:latest 192.168.226.11:5000/busybox:latestdocker push 192.168.226.11:5000/busybox:latest</code></pre><p>假设现在我们从私有仓库拉取一个镜像并执行。</p><p>创建<code>job.yaml</code>文件</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> batch/v1beta1<span class="token key atrule">kind</span><span class="token punctuation">:</span> CronJob<span class="token key atrule">metadata</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> hello<span class="token key atrule">spec</span><span class="token punctuation">:</span>  <span class="token key atrule">schedule</span><span class="token punctuation">:</span> <span class="token string">"*/1 * * * *"</span>  <span class="token key atrule">jobTemplate</span><span class="token punctuation">:</span>    <span class="token key atrule">spec</span><span class="token punctuation">:</span>      <span class="token key atrule">template</span><span class="token punctuation">:</span>        <span class="token key atrule">spec</span><span class="token punctuation">:</span>          <span class="token key atrule">containers</span><span class="token punctuation">:</span>          <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> hello            <span class="token key atrule">image</span><span class="token punctuation">:</span> 192.168.226.11<span class="token punctuation">:</span>5000/busybox            <span class="token key atrule">args</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> /bin/sh            <span class="token punctuation">-</span> <span class="token punctuation">-</span>c            <span class="token punctuation">-</span> date; echo Hello from the Kubernetes cluster          <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> OnFailure</code></pre><p>创建<code>Job</code></p><pre class=" language-shell"><code class="language-shell">k3s kubectl create -f job.yaml</code></pre><p>查看<code>Job</code>状态</p><pre class=" language-shell"><code class="language-shell">kubectl get cronjob hello</code></pre><p>查看<code>Job</code>创建的<code>Pod</code></p><pre class=" language-shell"><code class="language-shell">kubectl get jobs</code></pre><p>选择上面的一个已完成的<code>pod</code>的id，例如<code>hello-1578545280</code>。获取这个<code>pod</code>的输出</p><pre class=" language-shell"><code class="language-shell">pods=$(kubectl get pods --selector=job-name=hello-1578545280 --output=jsonpath={.items[*].metadata.name})kubectl logs $pods</code></pre><h2 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h2><p>新节点同样先安装Docker。安装k3s按如下步骤。</p><p>查看主节点的<code>node-token</code></p><pre class=" language-shell"><code class="language-shell">cat /var/lib/rancher/k3s/server/node-token</code></pre><p>在新节点上安装并启动为普通节点，注意ip地址和token改成自己的。</p><pre class=" language-shell"><code class="language-shell">curl -sfL https://get.k3s.io | K3S_URL=https://192.168.226.11:6443 K3S_TOKEN=K105933dce21eca704fb3913c26976e0c13c36878fc0c846a0780915c12fccdd78e::server:1a8e2a73e1247868ccb5b3ce0b3cbc7e sh -</code></pre><p>同样需要配置容器引擎使用Docker</p><pre class=" language-shell"><code class="language-shell">vim /etc/systemd/system/multi-user.target.wants/k3s-agent.service </code></pre><p>修改方式和主节点一样，然后重启<code>k3s-agent</code>，在<code>rancher</code>界面即可看到新加入的节点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用K3s搭建Kubernetes集群&quot;&gt;&lt;a href=&quot;#使用K3s搭建Kubernetes集群&quot; class=&quot;headerlink&quot; title=&quot;使用K3s搭建Kubernetes集群&quot;&gt;&lt;/a&gt;使用K3s搭建Kubernetes集群&lt;/h1&gt;&lt;p&gt;主要
      
    
    </summary>
    
      <category term="Kubernetes" scheme="http://sinlapis.github.io/categories/Kubernetes/"/>
    
    
      <category term="Kubernetes" scheme="http://sinlapis.github.io/tags/Kubernetes/"/>
    
      <category term="k8s" scheme="http://sinlapis.github.io/tags/k8s/"/>
    
      <category term="docker" scheme="http://sinlapis.github.io/tags/docker/"/>
    
      <category term="k3s" scheme="http://sinlapis.github.io/tags/k3s/"/>
    
  </entry>
  
  <entry>
    <title>microk8s部署多节点k8s集群</title>
    <link href="http://sinlapis.github.io/2019/12/31/microk8s%E9%83%A8%E7%BD%B2%E5%A4%9A%E8%8A%82%E7%82%B9k8s%E9%9B%86%E7%BE%A4/"/>
    <id>http://sinlapis.github.io/2019/12/31/microk8s部署多节点k8s集群/</id>
    <published>2019-12-31T02:14:42.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="microk8s部署多节点Kubernetes集群"><a href="#microk8s部署多节点Kubernetes集群" class="headerlink" title="microk8s部署多节点Kubernetes集群"></a>microk8s部署多节点Kubernetes集群</h1><p>为了增加工作量，想上一个k8s。microk8s安装简单还支持多节点，就选它了。</p><h2 id="准备和安装"><a href="#准备和安装" class="headerlink" title="准备和安装"></a>准备和安装</h2><p>snap没有换源一说，只能设置代理。</p><p>先设置<code>systemd editor</code>的默认编辑器为<code>vim</code></p><pre class=" language-shell"><code class="language-shell">vim /etc/profile</code></pre><p>加入以下内容</p><pre class=" language-shell"><code class="language-shell">export SYSTEMD_EDITOR="/usr/bin/vim"</code></pre><p>使设置生效</p><pre class=" language-shell"><code class="language-shell">source /etc/profile</code></pre><p>配置snapd</p><pre class=" language-shell"><code class="language-shell">systemctl edit snapd</code></pre><p>加入以下内容</p><pre class=" language-ini"><code class="language-ini"><span class="token selector">[Service]</span><span class="token constant">Environment</span><span class="token attr-value"><span class="token punctuation">=</span>"http_proxy=http://127.0.0.1:1080"</span><span class="token constant">Environment</span><span class="token attr-value"><span class="token punctuation">=</span>"https_proxy=http://127.0.0.1:1080"</span></code></pre><p>配置生效</p><pre class=" language-shell"><code class="language-shell">systemctl daemon-reloadsystemctl restart snapd</code></pre><p>安装microk8s</p><pre class=" language-shell"><code class="language-shell">snap install microk8s --classic</code></pre><p>查看组件状态</p><pre class=" language-shell"><code class="language-shell">> microk8s.statusmicrok8s is runningaddons:cilium: disableddashboard: disableddns: disabledfluentd: disabledgpu: disabledhelm: disabledingress: disabledistio: disabledjaeger: disabledjuju: disabledknative: disabledkubeflow: disabledlinkerd: disabledmetallb: disabledmetrics-server: disabledprometheus: disabledrbac: disabledregistry: disabledstorage: disabled</code></pre><h2 id="构建多节点集群"><a href="#构建多节点集群" class="headerlink" title="构建多节点集群"></a>构建多节点集群</h2><p>在一台机器上执行</p><pre class=" language-shell"><code class="language-shell">microk8s.add-node</code></pre><p>会出现以下内容</p><pre><code>Join node with: microk8s.join ip-172-31-20-243:25000/DDOkUupkmaBezNnMheTBqFYHLWINGDbf</code></pre><p>复制<code>join</code>指令到其它已经安装了microk8s的机器上执行。</p><p>查看集群内节点</p><pre class=" language-shell"><code class="language-shell">> microk8s.kubectl get no10.22.254.79       Ready    <none>   27s   v1.15.3ip-172-31-20-243   Ready    <none>   53s   v1.15.3</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;microk8s部署多节点Kubernetes集群&quot;&gt;&lt;a href=&quot;#microk8s部署多节点Kubernetes集群&quot; class=&quot;headerlink&quot; title=&quot;microk8s部署多节点Kubernetes集群&quot;&gt;&lt;/a&gt;microk8s部署多
      
    
    </summary>
    
      <category term="Kubernetes" scheme="http://sinlapis.github.io/categories/Kubernetes/"/>
    
    
      <category term="Kubernetes" scheme="http://sinlapis.github.io/tags/Kubernetes/"/>
    
      <category term="k8s" scheme="http://sinlapis.github.io/tags/k8s/"/>
    
      <category term="docker" scheme="http://sinlapis.github.io/tags/docker/"/>
    
      <category term="microk8s" scheme="http://sinlapis.github.io/tags/microk8s/"/>
    
  </entry>
  
  <entry>
    <title>kotlin+puppeteer写爬虫</title>
    <link href="http://sinlapis.github.io/2019/12/11/kotlin-puppeteer%E5%86%99%E7%88%AC%E8%99%AB/"/>
    <id>http://sinlapis.github.io/2019/12/11/kotlin-puppeteer写爬虫/</id>
    <published>2019-12-11T09:00:58.000Z</published>
    <updated>2021-03-03T02:50:12.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kotlin-puppeteer写爬虫"><a href="#kotlin-puppeteer写爬虫" class="headerlink" title="kotlin + puppeteer写爬虫"></a>kotlin + puppeteer写爬虫</h1><p>环境搞的很郁闷，这个代码倒是简单解决了，多亏了一位日本老哥。</p><p>主要参考：<a href="https://qiita.com/numa08/items/214c6c9d06d5094add3a" target="_blank" rel="noopener">バックグラウンドで使うpuppeteer with Kotlin</a></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>build.gradle中添加：</p><pre class=" language-groovy"><code class="language-groovy">dependencies <span class="token punctuation">{</span>    implementation <span class="token string">'org.jetbrains.kotlinx:kotlinx-coroutines-core-js:1.1.1'</span><span class="token punctuation">}</span></code></pre><h2 id="让kotlin使用async-await"><a href="#让kotlin使用async-await" class="headerlink" title="让kotlin使用async/await"></a>让kotlin使用async/await</h2><p>接口有变动，参考中代码部分失效。</p><pre class=" language-kotlin"><code class="language-kotlin"><span class="token keyword">import</span> kotlin<span class="token punctuation">.</span>coroutines<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">import</span> kotlin<span class="token punctuation">.</span>js<span class="token punctuation">.</span>Promisesuspend <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> Promise<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> T <span class="token operator">=</span> suspendCoroutine <span class="token punctuation">{</span> cont <span class="token operator">-></span>    <span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">{</span> cont<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> cont<span class="token punctuation">.</span><span class="token function">resumeWithException</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">async</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token function">suspend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> T<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> Promise <span class="token punctuation">{</span> resolve<span class="token punctuation">,</span> reject <span class="token operator">-></span>        x<span class="token punctuation">.</span><span class="token function">startCoroutine</span><span class="token punctuation">(</span><span class="token keyword">object</span> <span class="token operator">:</span> Continuation<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token keyword">override</span> <span class="token keyword">val</span> context <span class="token operator">=</span> EmptyCoroutineContext            <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">resumeWith</span><span class="token punctuation">(</span>result<span class="token operator">:</span> Result<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>isSuccess<span class="token punctuation">)</span>                    <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!!</span><span class="token punctuation">)</span>                <span class="token keyword">else</span>                    <span class="token function">reject</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">exceptionOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!!</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="封装puppeteer接口"><a href="#封装puppeteer接口" class="headerlink" title="封装puppeteer接口"></a>封装puppeteer接口</h2><pre class=" language-kotlin"><code class="language-kotlin"><span class="token keyword">import</span> kotlin<span class="token punctuation">.</span>js<span class="token punctuation">.</span>Promise<span class="token annotation builtin">@Suppress</span><span class="token punctuation">(</span><span class="token string">"FunctionName"</span><span class="token punctuation">)</span><span class="token annotation builtin">@JsModule</span><span class="token punctuation">(</span><span class="token string">"puppeteer"</span><span class="token punctuation">)</span>external <span class="token keyword">object</span> Puppeteer <span class="token punctuation">{</span>    <span class="token keyword">class</span> Page <span class="token punctuation">{</span>        <span class="token keyword">fun</span> <span class="token function">goto</span><span class="token punctuation">(</span>url<span class="token operator">:</span> String<span class="token punctuation">,</span> options<span class="token operator">:</span> dynamic<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>dynamic<span class="token operator">></span>        <span class="token keyword">fun</span> <span class="token function">waitFor</span><span class="token punctuation">(</span>element<span class="token operator">:</span> String<span class="token punctuation">,</span> options<span class="token operator">:</span> dynamic<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>dynamic<span class="token operator">></span>        <span class="token keyword">fun</span> <span class="token function">waitFor</span><span class="token punctuation">(</span>num<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>dynamic<span class="token operator">></span>        <span class="token keyword">fun</span> <span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>dynamic<span class="token operator">></span>        <span class="token keyword">fun</span> <span class="token function">click</span><span class="token punctuation">(</span>selector<span class="token operator">:</span> dynamic<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>dynamic<span class="token operator">></span>        <span class="token keyword">fun</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>dynamic<span class="token operator">></span>        <span class="token keyword">fun</span> <span class="token function">evaluate</span><span class="token punctuation">(</span>pageFunction<span class="token operator">:</span> Function<span class="token operator">&lt;</span>dynamic<span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>dynamic<span class="token operator">></span>    <span class="token punctuation">}</span>    <span class="token keyword">class</span> Browser <span class="token punctuation">{</span>        <span class="token keyword">fun</span> <span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>Page<span class="token operator">></span>        <span class="token keyword">fun</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>dynamic<span class="token operator">></span>        <span class="token keyword">fun</span> <span class="token function">wsEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> String    <span class="token punctuation">}</span>    <span class="token keyword">fun</span> <span class="token function">launch</span><span class="token punctuation">(</span>options<span class="token operator">:</span> dynamic<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>Browser<span class="token operator">></span><span class="token punctuation">}</span></code></pre><h2 id="爬虫代码"><a href="#爬虫代码" class="headerlink" title="爬虫代码"></a>爬虫代码</h2><pre class=" language-kotlin"><code class="language-kotlin"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    async <span class="token punctuation">{</span>        <span class="token keyword">val</span> browser <span class="token operator">=</span> Puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token keyword">object</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">also</span> <span class="token punctuation">{</span> it<span class="token operator">:</span> dynamic <span class="token operator">-></span>            it<span class="token punctuation">.</span>devtools <span class="token operator">=</span> <span class="token boolean">true</span>            it<span class="token punctuation">.</span>args <span class="token operator">=</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span><span class="token string">"--no-sandbox"</span><span class="token punctuation">,</span> <span class="token string">"--disable-setuid-sandbox"</span><span class="token punctuation">)</span>            it<span class="token punctuation">.</span>headless <span class="token operator">=</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">val</span> page <span class="token operator">=</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">"http://www.baidu.com"</span><span class="token punctuation">,</span> <span class="token keyword">object</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">also</span> <span class="token punctuation">{</span> it<span class="token operator">:</span> dynamic <span class="token operator">-></span> it<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            page<span class="token punctuation">.</span><span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">val</span> content <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token function">println</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>注意<code>it.headless = true</code>为开启Chrome的Headless模式，需要显示界面调试置为<code>false</code>即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;kotlin-puppeteer写爬虫&quot;&gt;&lt;a href=&quot;#kotlin-puppeteer写爬虫&quot; class=&quot;headerlink&quot; title=&quot;kotlin + puppeteer写爬虫&quot;&gt;&lt;/a&gt;kotlin + puppeteer写爬虫&lt;/h1&gt;&lt;
      
    
    </summary>
    
      <category term="杂项" scheme="http://sinlapis.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="kotlin" scheme="http://sinlapis.github.io/tags/kotlin/"/>
    
      <category term="爬虫" scheme="http://sinlapis.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="puppeteer" scheme="http://sinlapis.github.io/tags/puppeteer/"/>
    
  </entry>
  
  <entry>
    <title>kotlin+nodejs+idea+gradle项目构建</title>
    <link href="http://sinlapis.github.io/2019/12/11/kotlin-nodejs-idea-gradle%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/"/>
    <id>http://sinlapis.github.io/2019/12/11/kotlin-nodejs-idea-gradle项目构建/</id>
    <published>2019-12-11T07:21:40.000Z</published>
    <updated>2021-03-03T02:50:12.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kotlin-nodejs-idea-gradle项目构建"><a href="#kotlin-nodejs-idea-gradle项目构建" class="headerlink" title="kotlin + nodejs + idea + gradle项目构建"></a>kotlin + nodejs + idea + gradle项目构建</h1><p>kotlin转nodejs的插件只能用gradle，maven虽然也有但是不会用。这玩意我居然搞了一天才看到”Hello, JavaScript!”，人老了。</p><p>主要参考：<a href="https://www.bennyhuo.com/2019/03/11/kotlin-nodejs/" target="_blank" rel="noopener">基于 Node.js 环境的 KotlinJs 工程的完美搭建</a>。</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>现在nodejs已经是IDEA中自带插件了，不再需要手动安装。直接创建项目，选gradle -&gt; kotlin(JavaScript)。</p><p>之后需要等IDEA将项目配置完毕。</p><h2 id="配置build-gradle"><a href="#配置build-gradle" class="headerlink" title="配置build.gradle"></a>配置build.gradle</h2><pre class=" language-groovy"><code class="language-groovy">group <span class="token string">'org.ndp'</span>version <span class="token string">'1'</span>buildscript <span class="token punctuation">{</span>    ext<span class="token operator">.</span>kotlin_version <span class="token operator">=</span> <span class="token string">'1.3.60'</span>    repositories <span class="token punctuation">{</span>        <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    dependencies <span class="token punctuation">{</span>        classpath <span class="token string">"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>apply plugin<span class="token punctuation">:</span> <span class="token string">'kotlin2js'</span>buildscript <span class="token punctuation">{</span>    repositories <span class="token punctuation">{</span>        maven <span class="token punctuation">{</span>            url <span class="token string">"https://dl.bintray.com/kotlin/kotlin-eap"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    dependencies <span class="token punctuation">{</span>        classpath <span class="token string">"org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.45"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>apply plugin<span class="token punctuation">:</span> <span class="token string">'org.jetbrains.kotlin.frontend'</span>repositories <span class="token punctuation">{</span>    <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>dependencies <span class="token punctuation">{</span>    compile <span class="token string">"org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"</span><span class="token punctuation">}</span>compileKotlin2Js <span class="token punctuation">{</span>    kotlinOptions<span class="token operator">.</span>moduleKind <span class="token operator">=</span> <span class="token string">"commonjs"</span>    kotlinOptions<span class="token operator">.</span>sourceMap <span class="token operator">=</span> <span class="token boolean">true</span>    kotlinOptions<span class="token operator">.</span>metaInfo <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">}</span>kotlinFrontend <span class="token punctuation">{</span>    npm <span class="token punctuation">{</span>        devDependency <span class="token string">"karma"</span>     <span class="token comment" spellcheck="true">// development dependency</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>之后需要静待gradle配置好，时间比较长。</p><p>不要在<code>compileKotlin2Js</code>中设置输出目录，会导致<code>Error: Cannot find module &#39;kotlin&#39;</code>。</p><h2 id="编写Kotlin"><a href="#编写Kotlin" class="headerlink" title="编写Kotlin"></a>编写Kotlin</h2><p>在<code>src/main/kotlin/</code>下新建kt文件：</p><pre class=" language-kotlin"><code class="language-kotlin"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello JavaScript!"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><p>点击<code>main</code>旁边的运行即可看到结果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;kotlin-nodejs-idea-gradle项目构建&quot;&gt;&lt;a href=&quot;#kotlin-nodejs-idea-gradle项目构建&quot; class=&quot;headerlink&quot; title=&quot;kotlin + nodejs + idea + gradle项目构
      
    
    </summary>
    
      <category term="杂项" scheme="http://sinlapis.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="idea" scheme="http://sinlapis.github.io/tags/idea/"/>
    
      <category term="gradle" scheme="http://sinlapis.github.io/tags/gradle/"/>
    
      <category term="nodejs" scheme="http://sinlapis.github.io/tags/nodejs/"/>
    
      <category term="kotlin" scheme="http://sinlapis.github.io/tags/kotlin/"/>
    
  </entry>
  
  <entry>
    <title>maven的kotlin项目打包以及添加kotlin依赖</title>
    <link href="http://sinlapis.github.io/2019/12/02/maven%E7%9A%84kotlin%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E4%BB%A5%E5%8F%8A%E6%B7%BB%E5%8A%A0kotlin%E4%BE%9D%E8%B5%96/"/>
    <id>http://sinlapis.github.io/2019/12/02/maven的kotlin项目打包以及添加kotlin依赖/</id>
    <published>2019-12-02T08:09:38.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="maven的kotlin项目打包以及添加kotlin依赖"><a href="#maven的kotlin项目打包以及添加kotlin依赖" class="headerlink" title="maven的kotlin项目打包以及添加kotlin依赖"></a>maven的kotlin项目打包以及添加kotlin依赖</h1><p>准备了一个纯jre的docker镜像，想运行kotlin的jar包，结果找了一圈还是在官网找到了解决办法。</p><h2 id="不包含kotlin依赖"><a href="#不包含kotlin依赖" class="headerlink" title="不包含kotlin依赖"></a>不包含kotlin依赖</h2><p>在<code>pom.xml</code>中<code>build -&gt; plugins</code>中添加</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-jar-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>archive</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>addClasspath</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>addClasspath</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>${main.class}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>archive</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span></code></pre><h2 id="包含kotlin依赖"><a href="#包含kotlin依赖" class="headerlink" title="包含kotlin依赖"></a>包含kotlin依赖</h2><p>在<code>pom.xml</code>中<code>build -&gt; plugins</code>中添加</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-assembly-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>make-assembly<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">></span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>single<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>archive</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>${main.class}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>archive</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>descriptorRefs</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>descriptorRef</span><span class="token punctuation">></span></span>jar-with-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>descriptorRef</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>descriptorRefs</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;maven的kotlin项目打包以及添加kotlin依赖&quot;&gt;&lt;a href=&quot;#maven的kotlin项目打包以及添加kotlin依赖&quot; class=&quot;headerlink&quot; title=&quot;maven的kotlin项目打包以及添加kotlin依赖&quot;&gt;&lt;/a&gt;ma
      
    
    </summary>
    
      <category term="杂项" scheme="http://sinlapis.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="kotlin" scheme="http://sinlapis.github.io/tags/kotlin/"/>
    
      <category term="maven" scheme="http://sinlapis.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>React0x00</title>
    <link href="http://sinlapis.github.io/2019/10/28/React0x00/"/>
    <id>http://sinlapis.github.io/2019/10/28/React0x00/</id>
    <published>2019-10-28T08:31:07.000Z</published>
    <updated>2021-03-03T02:50:12.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello, world!"></a>Hello, world!</h1><p>创建项目直接使用Webstorm，选择React App。然后执行：</p><pre class=" language-shell"><code class="language-shell">react-scripts eject</code></pre><p>清空<code>src</code>中的文件，重新建立文件<code>index.js</code>，即React入口， 输入：</p><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">'react-dom'</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Hello<span class="token punctuation">,</span> world<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><code>render</code>的第一个参数为jsx，可以理解为React的元素，可以作为js变量的值。</p><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">'react-dom'</span><span class="token keyword">const</span> ele <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Hello<span class="token punctuation">,</span> world<span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>    ele<span class="token punctuation">,</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="创建组件"><a href="#创建组件" class="headerlink" title="创建组件"></a>创建组件</h1><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">'react-dom'</span><span class="token keyword">const</span> Ele <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Hello<span class="token punctuation">,</span> <span class="token punctuation">{</span>props<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token operator">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">}</span><span class="token punctuation">;</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ele</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>React<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">'react-dom'</span><span class="token keyword">class</span> <span class="token class-name">Ele</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token keyword">class</span> <span class="token class-name">app</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ele</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>arg<span class="token punctuation">"</span>/</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="组件嵌套"><a href="#组件嵌套" class="headerlink" title="组件嵌套"></a>组件嵌套</h3><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">'react-dom'</span><span class="token keyword">const</span> Title <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>app title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Ele</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Title</span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ele</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test</span> <span class="token attr-name">arg"</span><span class="token punctuation">/></span></span><span class="token punctuation">,</span>    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="组件样式"><a href="#组件样式" class="headerlink" title="组件样式"></a>组件样式</h1><h2 id="使用js"><a href="#使用js" class="headerlink" title="使用js"></a>使用js</h2><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">const</span> Title <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>color<span class="token punctuation">:</span> <span class="token string">'#0099ff'</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>app title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">;</span></code></pre><h2 id="使用class"><a href="#使用class" class="headerlink" title="使用class"></a>使用class</h2><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.blue-title</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#0099ff</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token string">'./index.css'</span><span class="token keyword">const</span> Title <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>blue-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>app title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">;</span></code></pre><h2 id="使用第三方库classnames"><a href="#使用第三方库classnames" class="headerlink" title="使用第三方库classnames"></a>使用第三方库classnames</h2><p>安装。</p><pre class=" language-shell"><code class="language-shell">npm i -D classnames</code></pre><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.blue-title</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#0099ff</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.red-title</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#ff6666</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.bg</span> </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> antiquewhite<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token string">'./index.css'</span><span class="token keyword">import</span> classNames <span class="token keyword">from</span> <span class="token string">'classnames'</span><span class="token keyword">const</span> Title <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span><span class="token string">'bg'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'blue-title'</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">'red-title'</span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>app title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">;</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hello-world&quot;&gt;&lt;a href=&quot;#Hello-world&quot; class=&quot;headerlink&quot; title=&quot;Hello, world!&quot;&gt;&lt;/a&gt;Hello, world!&lt;/h1&gt;&lt;p&gt;创建项目直接使用Webstorm，选择React App。然
      
    
    </summary>
    
      <category term="React" scheme="http://sinlapis.github.io/categories/React/"/>
    
    
      <category term="前端" scheme="http://sinlapis.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="React" scheme="http://sinlapis.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>less基础</title>
    <link href="http://sinlapis.github.io/2019/10/23/less%E5%9F%BA%E7%A1%80/"/>
    <id>http://sinlapis.github.io/2019/10/23/less基础/</id>
    <published>2019-10-23T02:23:38.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="less基础"><a href="#less基础" class="headerlink" title="less基础"></a>less基础</h1><p>再摸一个less。</p><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>使用node.js中less编译。</p><pre><code>npm i -D less</code></pre><pre><code>lessc test.less test.css</code></pre><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p><code>//</code>不会出现在css文件中，<code>/* */</code>会。</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>支持选择器、属性和属性值。选择器和属性在引用时要使用<code>{}</code>，但一般只使用值作为变量。</p><pre class=" language-less"><code class="language-less"><span class="token variable">@mainColor<span class="token punctuation">:</span></span> aliceblue<span class="token punctuation">;</span><span class="token variable">@attr<span class="token punctuation">:</span></span> color<span class="token punctuation">;</span><span class="token variable">@selector<span class="token punctuation">:</span></span> body<span class="token punctuation">;</span><span class="token selector">@{selector}</span> <span class="token punctuation">{</span>  <span class="token property">@{attr}</span><span class="token punctuation">:</span> <span class="token variable">@mainColor</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>less中变量的作用域是块级，并且会延迟加载，即会在块执行完毕后才看变量值。</p><h2 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h2><p>less可以实现类似html中的嵌套。</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>&lt;%= htmlWebpackPlugin.options.title %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    outer    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>test word.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>hello, world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class=" language-less"><code class="language-less"><span class="token variable">@mainColor<span class="token punctuation">:</span></span> aliceblue<span class="token punctuation">;</span><span class="token selector">body</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@mainColor</span><span class="token punctuation">;</span>  <span class="token selector">h1</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> coral<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.green</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>设置元素状态时需要修正嵌套级别。</p><pre class=" language-less"><code class="language-less"><span class="token variable">@mainColor<span class="token punctuation">:</span></span> aliceblue<span class="token punctuation">;</span><span class="token selector">body</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@mainColor</span><span class="token punctuation">;</span>  <span class="token selector">h1</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> coral<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">.green</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>    <span class="token selector">&amp;:hover</span> <span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#66cccc</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="混合"><a href="#混合" class="headerlink" title="混合"></a>混合</h2><p>可以理解为less的方法？</p><p>可以省去大段重复css代码。</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>&lt;%= htmlWebpackPlugin.options.title %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    outer    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>test word.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>hello, world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class=" language-less"><code class="language-less"><span class="token variable">@mainColor<span class="token punctuation">:</span></span> aliceblue<span class="token punctuation">;</span><span class="token selector">.textHover</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>  <span class="token selector">&amp;:hover</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#66cccc</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">body</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@mainColor</span><span class="token punctuation">;</span>  <span class="token selector">h1</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> coral<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">#text1, #text2</span> <span class="token punctuation">{</span>    <span class="token mixin-usage function">.textHover</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>混合的css会输出到编译后的css文件里，会有重复，可以使用如下的方式来避免。</p><pre class=" language-less"><code class="language-less"><span class="token variable">@mainColor<span class="token punctuation">:</span></span> aliceblue<span class="token punctuation">;</span><span class="token selector">.textHover()</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>  <span class="token selector">&amp;:hover</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#66cccc</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">body</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@mainColor</span><span class="token punctuation">;</span>  <span class="token selector">h1</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> coral<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">#text1, #text2</span> <span class="token punctuation">{</span>    <span class="token mixin-usage function">.textHover</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>混合可以带有参数。</p><pre class=" language-less"><code class="language-less"><span class="token variable">@mainColor<span class="token punctuation">:</span></span> aliceblue<span class="token punctuation">;</span><span class="token selector">.textHover(<span class="token variable">@origin</span>, <span class="token variable">@hover</span>)</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@origin</span><span class="token punctuation">;</span>  <span class="token selector">&amp;:hover</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@hover</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">body</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@mainColor</span><span class="token punctuation">;</span>  <span class="token selector">h1</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> coral<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">#text1</span> <span class="token punctuation">{</span>    <span class="token mixin-usage function">.textHover</span><span class="token punctuation">(</span>aqua<span class="token punctuation">,</span> <span class="token hexcode">#44cccc</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">#text2</span> <span class="token punctuation">{</span>    <span class="token mixin-usage function">.textHover</span><span class="token punctuation">(</span>pink<span class="token punctuation">,</span> <span class="token hexcode">#dda0ba</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>混合中参数可以有默认值。</p><pre class=" language-less"><code class="language-less"><span class="token variable">@mainColor<span class="token punctuation">:</span></span> aliceblue<span class="token punctuation">;</span><span class="token selector">.textHover(<span class="token variable">@origin</span>: aqua, <span class="token variable">@hover</span>: #44cccc)</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@origin</span><span class="token punctuation">;</span>  <span class="token selector">&amp;:hover</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@hover</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token selector">body</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@mainColor</span><span class="token punctuation">;</span>  <span class="token selector">h1</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> coral<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">#text1</span> <span class="token punctuation">{</span>    <span class="token mixin-usage function">.textHover</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">#text2</span> <span class="token punctuation">{</span>    <span class="token mixin-usage function">.textHover</span><span class="token punctuation">(</span>pink<span class="token punctuation">,</span> <span class="token hexcode">#dda0ba</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>参数有默认值时可以指定部分参数。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;less基础&quot;&gt;&lt;a href=&quot;#less基础&quot; class=&quot;headerlink&quot; title=&quot;less基础&quot;&gt;&lt;/a&gt;less基础&lt;/h1&gt;&lt;p&gt;再摸一个less。&lt;/p&gt;
&lt;h2 id=&quot;编译&quot;&gt;&lt;a href=&quot;#编译&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="less" scheme="http://sinlapis.github.io/categories/less/"/>
    
    
      <category term="前端" scheme="http://sinlapis.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="less" scheme="http://sinlapis.github.io/tags/less/"/>
    
      <category term="css" scheme="http://sinlapis.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Webpack配置</title>
    <link href="http://sinlapis.github.io/2019/10/22/Webpack%E9%85%8D%E7%BD%AE/"/>
    <id>http://sinlapis.github.io/2019/10/22/Webpack配置/</id>
    <published>2019-10-22T01:34:40.000Z</published>
    <updated>2021-03-03T02:50:12.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Webpack配置"><a href="#Webpack配置" class="headerlink" title="Webpack配置"></a>Webpack配置</h1><p>Kotlin看不动了，摸鱼学学前端。</p><p>先安装node.js和npm，此处略。</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>初始化package描述文件，在项目路径中生成<code>package.json</code>文件。</p><pre class=" language-shell"><code class="language-shell">npm init</code></pre><p>或者使用<code>npm init --yes</code>省去中间配置步骤。</p><h2 id="安装Webpack"><a href="#安装Webpack" class="headerlink" title="安装Webpack"></a>安装Webpack</h2><pre class=" language-shell"><code class="language-shell">npm i webpack webpack-cli -D</code></pre><blockquote><p>–save-dev(-D)参数意思是把模块版本信息保存到devDependencies（开发环境依赖）中，即package.json的devDependencies字段中</p></blockquote><h2 id="配置build启动脚本"><a href="#配置build启动脚本" class="headerlink" title="配置build启动脚本"></a>配置build启动脚本</h2><p>在<code>package.json</code>中，对<code>scripts</code>添加<code>build</code>字段：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"webpack --mode production"</span><span class="token punctuation">,</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>此外在项目目录中新建文件夹<code>src</code>作为源码目录，在<code>src</code>中新建文件<code>index.js</code>作为程序入口，内容随便写点。</p><p>此时可以测试能否build成功：</p><pre class=" language-shell"><code class="language-shell">npm run build</code></pre><p>项目目录中会出现一个<code>dist</code>文件夹，里面有一个<code>main.js</code>，即转换生成的js文件。</p><h2 id="使用webpack-config-js"><a href="#使用webpack-config-js" class="headerlink" title="使用webpack.config.js"></a>使用webpack.config.js</h2><p>可以使用<code>webpack.config.js</code>来自定义<code>build</code>的入口和出口。该文件可以使用<code>node.js</code>的模块。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"dist"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'output.js'</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><code>require</code>是<code>node.js</code>引入模块的方法。此处引入的<code>path</code>是用于处理操作系统中文件路径的模块。<code>path.resolve()</code>方法将路径转换为绝对路径。<code>__dirname</code>为当前执行文件所在目录的完整目录名。</p><p>如果需要有多个入口和多个出口，可以如下配置：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>        about<span class="token punctuation">:</span> <span class="token string">'./src/about.js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"dist"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'[name].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p><code>output</code>可以省略，生成的文件名使用<code>entry</code>中对应的<code>key</code>值。<code>[name]</code>是由<code>webpack</code>自动填充的字段。还可以使用<code>[hash]</code>、<code>[chunkHash]</code>来生成hash值。</p><p><code>webpack.config.js</code>的位置也是可配置的，需要修改<code>package.json - scripts - build</code>字段</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>   <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"webpack --mode production --config scripts/webpack.config.js"</span><span class="token punctuation">,</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>此时<code>webpack</code>的当前路径变为<code>./scripts/</code>，因此还需要修改<code>webpack.config.js</code>。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> dist <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>        about<span class="token punctuation">:</span> <span class="token string">'./src/about.js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> dist<span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'[name].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>或者</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>        about<span class="token punctuation">:</span> <span class="token string">'./src/about.js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"dist"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'[name].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p><code>process.cwd()</code>为获得当前执行node命令时候的文件夹目录名。</p><h2 id="自动生成html"><a href="#自动生成html" class="headerlink" title="自动生成html"></a>自动生成html</h2><p>如果生成js使用了hash值作为文件名，那么对应的html也需要自动生成。安装插件<code>html-webpack-plugin</code>。</p><pre class=" language-shell"><code class="language-shell">npm i -D html-webpack-plugin</code></pre><p>在<code>webpack.config.js</code>中加入插件：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 引入模块</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> dist <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> dist<span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'[name].[chunkHash:8].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 引入插件</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>进行<code>npm run build</code>，在<code>dist</code>中生成了<code>index.html</code>，其中使用的js文件是打包的js文件。</p><h2 id="html模版"><a href="#html模版" class="headerlink" title="html模版"></a>html模版</h2><p>使用html模版则需要在项目目录中建立<code>public</code>文件夹，在其中建立<code>home.html</code>，如下：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>自动生成模版<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>修改<code>webpack.config.js</code>，为插件添加配置：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> dist <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> dist<span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'[name].[chunkHash:8].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                title<span class="token punctuation">:</span> <span class="token string">"模版测试"</span><span class="token punctuation">,</span>                template<span class="token punctuation">:</span> <span class="token string">"public/home.html"</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>可以使用模版语法来定制生成的html。</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>&lt;%= htmlWebpackPlugin.options.title %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>再次打包则生成的html如下：</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>zh<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>模版测试<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main.299861a9.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><p>安装<code>style-loader</code>和<code>css-loader</code>。<code>style-loader</code>用于插入css到js里。<code>css-loader</code>用于处理css。</p><pre class=" language-shell"><code class="language-shell">npm i -D style-loader css-loader</code></pre><p>修改<code>webpack.config.js</code>，添加loader：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> dist <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> dist<span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'[name].[chunkHash:8].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    module<span class="token punctuation">:</span> <span class="token punctuation">{</span>        rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">'style-loader'</span><span class="token punctuation">,</span> <span class="token string">'css-loader'</span> <span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                title<span class="token punctuation">:</span> <span class="token string">"模版测试"</span><span class="token punctuation">,</span>                template<span class="token punctuation">:</span> <span class="token string">"public/home.html"</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p><code>loader</code>的执行顺序从后向前。</p><p>在js文件中引入css。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token string">'./main.css'</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"home"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>此时进行打包，css会进入js并在执行的时候生效。</p><p>如果希望提取css到单独文件，则需要安装<code>mini-css-extract-plugin</code>插件。</p><pre class=" language-shell"><code class="language-shell">npm i -D mini-css-extract-plugin</code></pre><p>修改<code>webpack.config.js</code>，加入该插件的配置，修改位置已标出。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// [1]</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> dist <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> dist<span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'[name].[chunkHash:8].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    module<span class="token punctuation">:</span> <span class="token punctuation">{</span>        rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// [2]</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span> <span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">"模版测试"</span><span class="token punctuation">,</span>            template<span class="token punctuation">:</span> <span class="token string">"public/home.html"</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// [3]</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            filename<span class="token punctuation">:</span> <span class="token string">'[name].css'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>进行打包时css文件会单独到处，并在html中引入。</p><h2 id="构建导出目录结构"><a href="#构建导出目录结构" class="headerlink" title="构建导出目录结构"></a>构建导出目录结构</h2><p>修改<code>webpack.config.js</code>，直接在导出部分添加路径即可。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> dist <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> dist<span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// [1]</span>        filename<span class="token punctuation">:</span> <span class="token string">'js/[name].[chunkHash:8].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    module<span class="token punctuation">:</span> <span class="token punctuation">{</span>        rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span> <span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">"模版测试"</span><span class="token punctuation">,</span>            template<span class="token punctuation">:</span> <span class="token string">"public/home.html"</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// [2]</span>            filename<span class="token punctuation">:</span> <span class="token string">'css/[name].[chunkHash:8].css'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="配置开发服务器"><a href="#配置开发服务器" class="headerlink" title="配置开发服务器"></a>配置开发服务器</h2><p>安装插件<code>webpack-dev-server</code>。</p><pre class=" language-shell"><code class="language-shell">npm i -D webpack-dev-server</code></pre><p>修改<code>package.json</code>，添加<code>dev</code>命令。</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"test-react-2"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"index.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"webpack --mode production --config scripts/webpack.config.js"</span><span class="token punctuation">,</span>    <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"webpack-dev-server --mode development --config scripts/webpack.config.js"</span><span class="token punctuation">,</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"css-loader"</span><span class="token operator">:</span> <span class="token string">"^3.2.0"</span><span class="token punctuation">,</span>    <span class="token property">"html-webpack-plugin"</span><span class="token operator">:</span> <span class="token string">"^3.2.0"</span><span class="token punctuation">,</span>    <span class="token property">"mini-css-extract-plugin"</span><span class="token operator">:</span> <span class="token string">"^0.8.0"</span><span class="token punctuation">,</span>    <span class="token property">"style-loader"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"webpack"</span><span class="token operator">:</span> <span class="token string">"^4.41.2"</span><span class="token punctuation">,</span>    <span class="token property">"webpack-cli"</span><span class="token operator">:</span> <span class="token string">"^3.3.9"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>修改<code>webpack.config.js</code>，可以配置端口号等。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> dist <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> dist<span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'js/[name].[chunkHash:8].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    module<span class="token punctuation">:</span> <span class="token punctuation">{</span>        rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span> <span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">"模版测试"</span><span class="token punctuation">,</span>            template<span class="token punctuation">:</span> <span class="token string">"public/home.html"</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            filename<span class="token punctuation">:</span> <span class="token string">'css/[name].[chunkHash:8].css'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// [1]</span>    devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>        port<span class="token punctuation">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>        open<span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="配置css预处理器"><a href="#配置css预处理器" class="headerlink" title="配置css预处理器"></a>配置css预处理器</h2><p>安装<code>less</code>和<code>less-loader</code>。</p><pre class=" language-shell"><code class="language-shell">npm i -D less less-loader</code></pre><p>修改<code>webpack.config.js</code>，添加less文件规则。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> dist <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> dist<span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'js/[name].[chunkHash:8].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    module<span class="token punctuation">:</span> <span class="token punctuation">{</span>        rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span> <span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// [1]</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.less$/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span> <span class="token string">'less-loader'</span> <span class="token punctuation">]</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">"模版测试"</span><span class="token punctuation">,</span>            template<span class="token punctuation">:</span> <span class="token string">"public/home.html"</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            filename<span class="token punctuation">:</span> <span class="token string">'css/[name].[chunkHash:8].css'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>        port<span class="token punctuation">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>        open<span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>添加一个less文件并引入。</p><pre class=" language-less"><code class="language-less"><span class="token selector">body</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> aliceblue<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token string">'./main.css'</span><span class="token comment" spellcheck="true">// [1]</span><span class="token keyword">import</span> <span class="token string">'./test.less'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"home"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h2><p>安装<code>file-loader</code>。</p><pre class=" language-shell"><code class="language-shell">npm i -D file-loader</code></pre><p>在<code>webpack.config.js</code>中配置规则。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> dist <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> dist<span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'js/[name].[chunkHash:8].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    module<span class="token punctuation">:</span> <span class="token punctuation">{</span>        rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.less$/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// [1]</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.(png|jpe?g|gif|jfif)$/i</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">{</span>                        loader<span class="token punctuation">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">]</span><span class="token punctuation">,</span>                options<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    name<span class="token punctuation">:</span> <span class="token string">'[path][name].[ext]'</span><span class="token punctuation">,</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">"模版测试"</span><span class="token punctuation">,</span>            template<span class="token punctuation">:</span> <span class="token string">"public/home.html"</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            filename<span class="token punctuation">:</span> <span class="token string">'css/[name].[chunkHash:8].css'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>        port<span class="token punctuation">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>        open<span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="字体处理"><a href="#字体处理" class="headerlink" title="字体处理"></a>字体处理</h2><p>同样使用<code>file-loader</code>。在<code>webpack.config.js</code>中添加配置。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> dist <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> dist<span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'js/[name].[chunkHash:8].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    module<span class="token punctuation">:</span> <span class="token punctuation">{</span>        rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.less$/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.(png|jpe?g|gif|jfif)$/i</span><span class="token punctuation">,</span>                loader<span class="token punctuation">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>                options<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    name<span class="token punctuation">:</span> <span class="token string">'static/images/[name].[ext]'</span><span class="token punctuation">,</span>                    publicPath<span class="token punctuation">:</span> <span class="token string">'/'</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// [1]</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.(eot|ttf|woff|woff2)(\?v=\d+\.\d+\.\d+)?$/</span><span class="token punctuation">,</span>                loader<span class="token punctuation">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>                options<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    name<span class="token punctuation">:</span> <span class="token string">'static/fonts/[name].[ext]'</span><span class="token punctuation">,</span>                    publicPath<span class="token punctuation">:</span> <span class="token string">'/'</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">"模版测试"</span><span class="token punctuation">,</span>            template<span class="token punctuation">:</span> <span class="token string">"public/home.html"</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            filename<span class="token punctuation">:</span> <span class="token string">'static/css/[name].[chunkHash:8].css'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>        port<span class="token punctuation">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>        open<span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>修改less。</p><pre class=" language-less"><code class="language-less"><span class="token variable">@mainColor<span class="token punctuation">:</span></span> aliceblue<span class="token punctuation">;</span><span class="token selector">.textHover(<span class="token variable">@origin</span>: aqua, <span class="token variable">@hover</span>: #44cccc)</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@origin</span><span class="token punctuation">;</span>  <span class="token selector">&amp;:hover</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@hover</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// [1]</span><span class="token atrule">@font-face</span> <span class="token punctuation">{</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> FFXIV_Lodestone_SSF<span class="token punctuation">;</span>  <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url">url("assets/fonts/FFXIV_Lodestone_SSF.woff")</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'woff'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">@mainColor</span><span class="token punctuation">;</span>  <span class="token selector">h1</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> coral<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">#text1</span> <span class="token punctuation">{</span>    <span class="token mixin-usage function">.textHover</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">#text2</span> <span class="token punctuation">{</span>    <span class="token mixin-usage function">.textHover</span><span class="token punctuation">(</span>pink<span class="token punctuation">,</span> <span class="token hexcode">#dda0ba</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// [2]</span>  <span class="token selector">#text3</span> <span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> FFXIV_Lodestone_SSF<span class="token punctuation">,</span> serif<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="配置babel"><a href="#配置babel" class="headerlink" title="配置babel"></a>配置babel</h2><p>babel可以把ES2015及更新版本的js转换为向前兼容的js，也支持转换jsx。</p><p>安装<code>babel-loader</code>。</p><pre class=" language-shell"><code class="language-shell">npm i -D babel-loader @babel/core @babel/preset-env</code></pre><p>在<code>webpack.config.js</code>中添加规则。</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> dist <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>    entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>        main<span class="token punctuation">:</span> <span class="token string">'./src/home.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    output<span class="token punctuation">:</span> <span class="token punctuation">{</span>        path<span class="token punctuation">:</span> dist<span class="token punctuation">,</span>        filename<span class="token punctuation">:</span> <span class="token string">'js/[name].[chunkHash:8].js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    module<span class="token punctuation">:</span> <span class="token punctuation">{</span>        rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.less$/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.(png|jpe?g|gif|jfif)$/i</span><span class="token punctuation">,</span>                loader<span class="token punctuation">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>                options<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    name<span class="token punctuation">:</span> <span class="token string">'static/images/[name].[ext]'</span><span class="token punctuation">,</span>                    publicPath<span class="token punctuation">:</span> <span class="token string">'/'</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.(eot|ttf|woff|woff2)(\?v=\d+\.\d+\.\d+)?$/</span><span class="token punctuation">,</span>                loader<span class="token punctuation">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>                options<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    name<span class="token punctuation">:</span> <span class="token string">'static/fonts/[name].[ext]'</span><span class="token punctuation">,</span>                    publicPath<span class="token punctuation">:</span> <span class="token string">'/'</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// [1]</span>            <span class="token punctuation">{</span>                test<span class="token punctuation">:</span> <span class="token regex">/\.m?js$/</span><span class="token punctuation">,</span>                exclude<span class="token punctuation">:</span> <span class="token regex">/(node_modules|bower_components)/</span><span class="token punctuation">,</span>                use<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    loader<span class="token punctuation">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>                    options<span class="token punctuation">:</span> <span class="token punctuation">{</span>                        presets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/preset-env'</span><span class="token punctuation">]</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">"模版测试"</span><span class="token punctuation">,</span>            template<span class="token punctuation">:</span> <span class="token string">"public/home.html"</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            filename<span class="token punctuation">:</span> <span class="token string">'static/css/[name].[chunkHash:8].css'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>        port<span class="token punctuation">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>        open<span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Webpack配置&quot;&gt;&lt;a href=&quot;#Webpack配置&quot; class=&quot;headerlink&quot; title=&quot;Webpack配置&quot;&gt;&lt;/a&gt;Webpack配置&lt;/h1&gt;&lt;p&gt;Kotlin看不动了，摸鱼学学前端。&lt;/p&gt;
&lt;p&gt;先安装node.js和npm，此
      
    
    </summary>
    
      <category term="Webpack" scheme="http://sinlapis.github.io/categories/Webpack/"/>
    
    
      <category term="前端" scheme="http://sinlapis.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Webpack" scheme="http://sinlapis.github.io/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>SQL基础教程笔记0x01</title>
    <link href="http://sinlapis.github.io/2019/09/08/SQL%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B00x01/"/>
    <id>http://sinlapis.github.io/2019/09/08/SQL基础教程笔记0x01/</id>
    <published>2019-09-08T01:18:25.000Z</published>
    <updated>2021-03-03T02:50:12.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h1><h2 id="表的加减法"><a href="#表的加减法" class="headerlink" title="表的加减法"></a>表的加减法</h2><h3 id="union"><a href="#union" class="headerlink" title="union"></a>union</h3><ul><li>对表进行并集操作。可以使用<code>union all</code>使结果包含重复行。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> product_id<span class="token punctuation">,</span> product_name<span class="token keyword">from</span> product<span class="token keyword">union</span><span class="token keyword">select</span> product_id<span class="token punctuation">,</span> product_name<span class="token keyword">from</span> product_2<span class="token punctuation">;</span></code></pre><table><thead><tr><th style="text-align:left">product_id</th><th style="text-align:left">product_name</th></tr></thead><tbody><tr><td style="text-align:left">0001</td><td style="text-align:left">T恤</td></tr><tr><td style="text-align:left">0002</td><td style="text-align:left">打孔器</td></tr><tr><td style="text-align:left">0003</td><td style="text-align:left">运动T恤</td></tr><tr><td style="text-align:left">0004</td><td style="text-align:left">菜刀</td></tr><tr><td style="text-align:left">0005</td><td style="text-align:left">高压锅</td></tr><tr><td style="text-align:left">0006</td><td style="text-align:left">叉子</td></tr><tr><td style="text-align:left">0007</td><td style="text-align:left">擦菜板</td></tr><tr><td style="text-align:left">0008</td><td style="text-align:left">圆珠笔</td></tr><tr><td style="text-align:left">0009</td><td style="text-align:left">手套</td></tr><tr><td style="text-align:left">0010</td><td style="text-align:left">水壶</td></tr></tbody></table><ul><li>注意：作为<code>union</code>的运算对象的记录的列数必须相同，列的类型必须一致；<code>order by</code>只能在最后使用一次。</li></ul><h3 id="intersect"><a href="#intersect" class="headerlink" title="intersect"></a>intersect</h3><ul><li>对表进行交集操作。MySQL不支持该操作。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/* postgreSQL */</span><span class="token keyword">select</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product<span class="token punctuation">.</span>product_id<span class="token punctuation">,</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product<span class="token punctuation">.</span>product_name<span class="token keyword">from</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product<span class="token keyword">intersect</span><span class="token keyword">select</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product_2<span class="token punctuation">.</span>product_id<span class="token punctuation">,</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product_2<span class="token punctuation">.</span>product_name<span class="token keyword">from</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product_2<span class="token punctuation">;</span></code></pre><table><thead><tr><th style="text-align:left">product_id</th><th style="text-align:left">product_name</th></tr></thead><tbody><tr><td style="text-align:left">0001</td><td style="text-align:left">T恤</td></tr><tr><td style="text-align:left">0002</td><td style="text-align:left">打孔器</td></tr><tr><td style="text-align:left">0003</td><td style="text-align:left">运动T恤</td></tr></tbody></table><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/* MySQL用exists模拟 */</span><span class="token keyword">select</span> product_id<span class="token punctuation">,</span> product_name<span class="token keyword">from</span> product <span class="token keyword">as</span> p<span class="token keyword">where</span> <span class="token keyword">exists</span><span class="token punctuation">(</span>              <span class="token keyword">select</span> product_id              <span class="token keyword">from</span> product_2 <span class="token keyword">as</span> p2              <span class="token keyword">where</span> p<span class="token punctuation">.</span>product_id <span class="token operator">=</span> p2<span class="token punctuation">.</span>product_id          <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="except"><a href="#except" class="headerlink" title="except"></a>except</h3><ul><li>对表进行差集操作，注意该操作不满足交换律。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/* postgreSQL */</span><span class="token keyword">select</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product<span class="token punctuation">.</span>product_id<span class="token punctuation">,</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product<span class="token punctuation">.</span>product_name<span class="token keyword">from</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product<span class="token keyword">except</span><span class="token keyword">select</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product_2<span class="token punctuation">.</span>product_id<span class="token punctuation">,</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product_2<span class="token punctuation">.</span>product_name<span class="token keyword">from</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product_2</code></pre><table><thead><tr><th style="text-align:left">product_id</th><th style="text-align:left">product_name</th></tr></thead><tbody><tr><td style="text-align:left">0004</td><td style="text-align:left">菜刀</td></tr><tr><td style="text-align:left">0005</td><td style="text-align:left">高压锅</td></tr><tr><td style="text-align:left">0006</td><td style="text-align:left">叉子</td></tr><tr><td style="text-align:left">0007</td><td style="text-align:left">擦菜板</td></tr><tr><td style="text-align:left">0008</td><td style="text-align:left">圆珠笔</td></tr></tbody></table><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/* MySQL用not exists模拟 */</span><span class="token keyword">select</span> product_id<span class="token punctuation">,</span> product_name<span class="token keyword">from</span> product <span class="token keyword">as</span> p<span class="token keyword">where</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span>              <span class="token keyword">select</span> product_id              <span class="token keyword">from</span> product_2 <span class="token keyword">as</span> p2              <span class="token keyword">where</span> p<span class="token punctuation">.</span>product_id <span class="token operator">=</span> p2<span class="token punctuation">.</span>product_id          <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><table><thead><tr><th style="text-align:left">product_id</th><th style="text-align:left">product_name</th></tr></thead><tbody><tr><td style="text-align:left">0004</td><td style="text-align:left">菜刀</td></tr><tr><td style="text-align:left">0005</td><td style="text-align:left">高压锅</td></tr><tr><td style="text-align:left">0008</td><td style="text-align:left">圆珠笔</td></tr><tr><td style="text-align:left">0006</td><td style="text-align:left">叉子</td></tr><tr><td style="text-align:left">0007</td><td style="text-align:left">擦菜板</td></tr></tbody></table><h2 id="联结"><a href="#联结" class="headerlink" title="联结"></a>联结</h2><h3 id="内联结"><a href="#内联结" class="headerlink" title="内联结"></a>内联结</h3><ul><li>以一张表中的列为桥梁，将其他表中满足同样条件的列汇集到同一结果之中。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> sp<span class="token punctuation">.</span>shop_id<span class="token punctuation">,</span> sp<span class="token punctuation">.</span>shop_name<span class="token punctuation">,</span> sp<span class="token punctuation">.</span>product_id<span class="token punctuation">,</span> p<span class="token punctuation">.</span>product_name<span class="token punctuation">,</span> p<span class="token punctuation">.</span>sale_price<span class="token keyword">from</span> <span class="token keyword">public</span><span class="token punctuation">.</span>shop_product <span class="token keyword">as</span> sp <span class="token keyword">inner</span> <span class="token keyword">join</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product <span class="token keyword">as</span> p<span class="token keyword">on</span> sp<span class="token punctuation">.</span>product_id <span class="token operator">=</span> p<span class="token punctuation">.</span>product_id</code></pre><table><thead><tr><th style="text-align:left">shop_id</th><th style="text-align:left">shop_name</th><th style="text-align:left">product_id</th><th style="text-align:left">product_name</th><th style="text-align:left">sale_price</th></tr></thead><tbody><tr><td style="text-align:left">000D</td><td style="text-align:left">福冈</td><td style="text-align:left">0001</td><td style="text-align:left">T恤</td><td style="text-align:left">1000</td></tr><tr><td style="text-align:left">000A</td><td style="text-align:left">东京</td><td style="text-align:left">0001</td><td style="text-align:left">T恤</td><td style="text-align:left">1000</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0002</td><td style="text-align:left">打孔器</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000A</td><td style="text-align:left">东京</td><td style="text-align:left">0002</td><td style="text-align:left">打孔器</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0003</td><td style="text-align:left">运动T恤</td><td style="text-align:left">4000</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0003</td><td style="text-align:left">运动T恤</td><td style="text-align:left">4000</td></tr><tr><td style="text-align:left">000A</td><td style="text-align:left">东京</td><td style="text-align:left">0003</td><td style="text-align:left">运动T恤</td><td style="text-align:left">4000</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0004</td><td style="text-align:left">菜刀</td><td style="text-align:left">3000</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0004</td><td style="text-align:left">菜刀</td><td style="text-align:left">3000</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0006</td><td style="text-align:left">叉子</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0006</td><td style="text-align:left">叉子</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0007</td><td style="text-align:left">擦菜板</td><td style="text-align:left">880</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0007</td><td style="text-align:left">擦菜板</td><td style="text-align:left">880</td></tr></tbody></table><h3 id="外联结"><a href="#外联结" class="headerlink" title="外联结"></a>外联结</h3><ul><li>和内联结基本相同，但是会选择主表的全部信息（见下面示例）。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> sp<span class="token punctuation">.</span>shop_id<span class="token punctuation">,</span> sp<span class="token punctuation">.</span>shop_name<span class="token punctuation">,</span> sp<span class="token punctuation">.</span>product_id<span class="token punctuation">,</span> p<span class="token punctuation">.</span>product_name<span class="token punctuation">,</span> p<span class="token punctuation">.</span>sale_price<span class="token keyword">from</span> <span class="token keyword">public</span><span class="token punctuation">.</span>shop_product <span class="token keyword">as</span> sp <span class="token keyword">right</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product <span class="token keyword">as</span> p<span class="token keyword">on</span> sp<span class="token punctuation">.</span>product_id <span class="token operator">=</span> p<span class="token punctuation">.</span>product_id</code></pre><table><thead><tr><th style="text-align:left">shop_id</th><th style="text-align:left">shop_name</th><th style="text-align:left">product_id</th><th style="text-align:left">product_name</th><th style="text-align:left">sale_price</th></tr></thead><tbody><tr><td style="text-align:left">000D</td><td style="text-align:left">福冈</td><td style="text-align:left">0001</td><td style="text-align:left">T恤</td><td style="text-align:left">1000</td></tr><tr><td style="text-align:left">000A</td><td style="text-align:left">东京</td><td style="text-align:left">0001</td><td style="text-align:left">T恤</td><td style="text-align:left">1000</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0002</td><td style="text-align:left">打孔器</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000A</td><td style="text-align:left">东京</td><td style="text-align:left">0002</td><td style="text-align:left">打孔器</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0003</td><td style="text-align:left">运动T恤</td><td style="text-align:left">4000</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0003</td><td style="text-align:left">运动T恤</td><td style="text-align:left">4000</td></tr><tr><td style="text-align:left">000A</td><td style="text-align:left">东京</td><td style="text-align:left">0003</td><td style="text-align:left">运动T恤</td><td style="text-align:left">4000</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0004</td><td style="text-align:left">菜刀</td><td style="text-align:left">3000</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0004</td><td style="text-align:left">菜刀</td><td style="text-align:left">3000</td></tr><tr><td style="text-align:left">NULL</td><td style="text-align:left">NULL</td><td style="text-align:left">NULL</td><td style="text-align:left">高压锅</td><td style="text-align:left">6800</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0006</td><td style="text-align:left">叉子</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0006</td><td style="text-align:left">叉子</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0007</td><td style="text-align:left">擦菜板</td><td style="text-align:left">880</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0007</td><td style="text-align:left">擦菜板</td><td style="text-align:left">880</td></tr><tr><td style="text-align:left">NULL</td><td style="text-align:left">NULL</td><td style="text-align:left">NULL</td><td style="text-align:left">圆珠笔</td><td style="text-align:left">100</td></tr></tbody></table><p>有两条记录另一张表上没有。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> sp<span class="token punctuation">.</span>shop_id<span class="token punctuation">,</span> sp<span class="token punctuation">.</span>shop_name<span class="token punctuation">,</span> sp<span class="token punctuation">.</span>product_id<span class="token punctuation">,</span> p<span class="token punctuation">.</span>product_name<span class="token punctuation">,</span> p<span class="token punctuation">.</span>sale_price<span class="token keyword">from</span> <span class="token keyword">public</span><span class="token punctuation">.</span>shop_product <span class="token keyword">as</span> sp <span class="token keyword">left</span> <span class="token keyword">join</span> <span class="token keyword">public</span><span class="token punctuation">.</span>product <span class="token keyword">as</span> p<span class="token keyword">on</span> sp<span class="token punctuation">.</span>product_id <span class="token operator">=</span> p<span class="token punctuation">.</span>product_id</code></pre><table><thead><tr><th style="text-align:left">shop_id</th><th style="text-align:left">shop_name</th><th style="text-align:left">product_id</th><th style="text-align:left">product_name</th><th style="text-align:left">sale_price</th></tr></thead><tbody><tr><td style="text-align:left">000D</td><td style="text-align:left">福冈</td><td style="text-align:left">0001</td><td style="text-align:left">T恤</td><td style="text-align:left">1000</td></tr><tr><td style="text-align:left">000A</td><td style="text-align:left">东京</td><td style="text-align:left">0001</td><td style="text-align:left">T恤</td><td style="text-align:left">1000</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0002</td><td style="text-align:left">打孔器</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000A</td><td style="text-align:left">东京</td><td style="text-align:left">0002</td><td style="text-align:left">打孔器</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0003</td><td style="text-align:left">运动T恤</td><td style="text-align:left">4000</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0003</td><td style="text-align:left">运动T恤</td><td style="text-align:left">4000</td></tr><tr><td style="text-align:left">000A</td><td style="text-align:left">东京</td><td style="text-align:left">0003</td><td style="text-align:left">运动T恤</td><td style="text-align:left">4000</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0004</td><td style="text-align:left">菜刀</td><td style="text-align:left">3000</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0004</td><td style="text-align:left">菜刀</td><td style="text-align:left">3000</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0006</td><td style="text-align:left">叉子</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0006</td><td style="text-align:left">叉子</td><td style="text-align:left">500</td></tr><tr><td style="text-align:left">000C</td><td style="text-align:left">大阪</td><td style="text-align:left">0007</td><td style="text-align:left">擦菜板</td><td style="text-align:left">880</td></tr><tr><td style="text-align:left">000B</td><td style="text-align:left">名古屋</td><td style="text-align:left">0007</td><td style="text-align:left">擦菜板</td><td style="text-align:left">880</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;集合运算&quot;&gt;&lt;a href=&quot;#集合运算&quot; class=&quot;headerlink&quot; title=&quot;集合运算&quot;&gt;&lt;/a&gt;集合运算&lt;/h1&gt;&lt;h2 id=&quot;表的加减法&quot;&gt;&lt;a href=&quot;#表的加减法&quot; class=&quot;headerlink&quot; title=&quot;表的加减法&quot;&gt;
      
    
    </summary>
    
      <category term="SQL" scheme="http://sinlapis.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="http://sinlapis.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>SQL基础教程笔记0x00</title>
    <link href="http://sinlapis.github.io/2019/09/07/SQL%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B00x00/"/>
    <id>http://sinlapis.github.io/2019/09/07/SQL基础教程笔记0x00/</id>
    <published>2019-09-07T02:05:05.000Z</published>
    <updated>2021-03-03T02:50:12.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查询基础"><a href="#查询基础" class="headerlink" title="查询基础"></a>查询基础</h1><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><h3 id="含有NULL时的真值"><a href="#含有NULL时的真值" class="headerlink" title="含有NULL时的真值"></a>含有NULL时的真值</h3><ul><li>SQL中的逻辑运算是三值逻辑，即包括真、假、不确定。</li></ul><h1 id="聚合与排序"><a href="#聚合与排序" class="headerlink" title="聚合与排序"></a>聚合与排序</h1><h2 id="为聚合结果指定条件"><a href="#为聚合结果指定条件" class="headerlink" title="为聚合结果指定条件"></a>为聚合结果指定条件</h2><h3 id="having子句"><a href="#having子句" class="headerlink" title="having子句"></a>having子句</h3><ul><li>having子句用于对集合指定条件过滤。having子句位于group by子句后面。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token punctuation">`</span>product_type<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">from</span> shop<span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token punctuation">`</span>product_type<span class="token punctuation">`</span><span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></code></pre><ul><li>having子句中能够使用的要素有：常数、聚合函数、group by子句中指定的列名（即聚合键）。</li></ul><h1 id="复杂查询"><a href="#复杂查询" class="headerlink" title="复杂查询"></a>复杂查询</h1><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><h3 id="视图的创建"><a href="#视图的创建" class="headerlink" title="视图的创建"></a>视图的创建</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">view</span> shop_sum <span class="token punctuation">(</span><span class="token punctuation">`</span>product_type<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>cnt_product<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token keyword">as</span><span class="token keyword">select</span>  <span class="token punctuation">`</span>product_type<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">from</span> shop<span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token punctuation">`</span>product_type<span class="token punctuation">`</span><span class="token punctuation">;</span></code></pre><h3 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h3><ul><li>定义视图时不能使用<code>order by</code>。</li><li>对视图更新是有条件的：<ol><li><code>select</code>子句中未使用<code>distinct</code>。</li><li><code>from</code>子句中只有一张表。</li><li>未使用<code>group by</code>子句。</li><li>未使用<code>having</code>子句。</li></ol></li></ul><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><ul><li>子查询就是将用来定义视图的select子句直接用于from子句中。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token punctuation">`</span>product_type<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>cnt_product<span class="token punctuation">`</span><span class="token keyword">from</span> <span class="token punctuation">(</span>         <span class="token keyword">select</span> <span class="token punctuation">`</span>product_type<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>cnt_product<span class="token punctuation">`</span>         <span class="token keyword">from</span> <span class="token punctuation">`</span>shop<span class="token punctuation">`</span>         <span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token punctuation">`</span>product_type<span class="token punctuation">`</span>     <span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>product_sum<span class="token punctuation">`</span><span class="token punctuation">;</span></code></pre><h3 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a>标量子查询</h3><ul><li>标量子查询必须而且只能返回1行1列的结果。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/* where子句中无法使用聚合函数，可以使用标量子查询代替。*/</span><span class="token keyword">select</span> <span class="token punctuation">`</span>product_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>product_name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>sale_price<span class="token punctuation">`</span><span class="token keyword">from</span> <span class="token punctuation">`</span>shop<span class="token punctuation">`</span><span class="token keyword">where</span> sale_price <span class="token operator">></span> <span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>sale_price<span class="token punctuation">)</span>    <span class="token keyword">from</span> <span class="token punctuation">`</span>shop<span class="token punctuation">`</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="关联子查询"><a href="#关联子查询" class="headerlink" title="关联子查询"></a>关联子查询</h2><ul><li>在普通子查询中添加where子句，使其变为标量子查询。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token punctuation">`</span>product_id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>product_name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>sale_price<span class="token punctuation">`</span><span class="token keyword">from</span> <span class="token punctuation">`</span>shop<span class="token punctuation">`</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>s1<span class="token punctuation">`</span><span class="token keyword">where</span> sale_price <span class="token operator">></span> <span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>sale_price<span class="token punctuation">)</span>    <span class="token keyword">from</span> <span class="token punctuation">`</span>shop<span class="token punctuation">`</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>s2<span class="token punctuation">`</span>    <span class="token keyword">where</span> <span class="token punctuation">`</span>s1<span class="token punctuation">`</span><span class="token punctuation">.</span><span class="token punctuation">`</span>product_type<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token punctuation">`</span>s2<span class="token punctuation">`</span><span class="token punctuation">.</span><span class="token punctuation">`</span>product_type<span class="token punctuation">`</span>    <span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token punctuation">`</span>product_type<span class="token punctuation">`</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="函数、谓词、case表达式"><a href="#函数、谓词、case表达式" class="headerlink" title="函数、谓词、case表达式"></a>函数、谓词、case表达式</h1><h2 id="谓词"><a href="#谓词" class="headerlink" title="谓词"></a>谓词</h2><h3 id="like"><a href="#like" class="headerlink" title="like"></a>like</h3><ul><li><code>%</code>代表0字符及以上的任意字符串，<code>_</code>代表任意一个字符。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/* pg */</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> test<span class="token punctuation">.</span>like_sample<span class="token punctuation">.</span>like_test<span class="token keyword">where</span> strcol <span class="token operator">like</span> <span class="token string">'abc%'</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> test<span class="token punctuation">.</span>like_sample<span class="token punctuation">.</span>like_test<span class="token keyword">where</span> strcol <span class="token operator">like</span> <span class="token string">'abc__'</span><span class="token punctuation">;</span></code></pre><h3 id="between"><a href="#between" class="headerlink" title="between"></a>between</h3><ul><li>范围查询，包括两个边界。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> <span class="token punctuation">`</span>shop<span class="token punctuation">`</span><span class="token keyword">where</span> sale_price <span class="token operator">between</span> <span class="token number">100</span> <span class="token operator">and</span> <span class="token number">1000</span><span class="token punctuation">;</span></code></pre><h3 id="is-null、is-not-null"><a href="#is-null、is-not-null" class="headerlink" title="is null、is not null"></a>is null、is not null</h3><ul><li>判断是否为<code>null</code>。</li></ul><h3 id="in"><a href="#in" class="headerlink" title="in"></a>in</h3><ul><li><code>or</code>的简便写法。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token punctuation">`</span>product_name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>purchase_price<span class="token punctuation">`</span><span class="token keyword">from</span> <span class="token punctuation">`</span>shop<span class="token punctuation">`</span><span class="token keyword">where</span> putchase_price <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="使用子查询作为in的参数"><a href="#使用子查询作为in的参数" class="headerlink" title="使用子查询作为in的参数"></a>使用子查询作为in的参数</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token punctuation">`</span>product_name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>sale_price<span class="token punctuation">`</span><span class="token keyword">from</span> <span class="token punctuation">`</span>shop<span class="token punctuation">`</span><span class="token keyword">where</span> <span class="token punctuation">`</span>product_id<span class="token punctuation">`</span> <span class="token operator">in</span> <span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token punctuation">`</span>product_id<span class="token punctuation">`</span>    <span class="token keyword">from</span> <span class="token punctuation">`</span>all_shops<span class="token punctuation">`</span>    <span class="token keyword">where</span> <span class="token punctuation">`</span>shop_id<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">'000c'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="exists"><a href="#exists" class="headerlink" title="exists"></a>exists</h3><ul><li>判断是否存在满足条件的某种记录，存在则返回真，不存在则返回假。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token punctuation">`</span>product_name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>sale_price<span class="token punctuation">`</span><span class="token keyword">from</span> <span class="token punctuation">`</span>product<span class="token punctuation">`</span> <span class="token keyword">as</span> p<span class="token keyword">where</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token operator">*</span>    <span class="token keyword">from</span> shop_product <span class="token keyword">as</span> sp    <span class="token keyword">where</span> sp<span class="token punctuation">.</span>shop_id <span class="token operator">=</span> <span class="token string">'000c'</span>    <span class="token operator">and</span> sp<span class="token punctuation">.</span>product_id <span class="token operator">=</span> p<span class="token punctuation">.</span>product_id<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="case表达式"><a href="#case表达式" class="headerlink" title="case表达式"></a>case表达式</h2><ul><li>满足<code>when</code>子句就执行对应的<code>then</code>子句，否则到下一个<code>when</code>子句，直到没有<code>when</code>子句后执行<code>else</code>子句。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span>    <span class="token keyword">case</span> <span class="token keyword">when</span> <span class="token punctuation">`</span>product_type<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">'A'</span>    <span class="token keyword">then</span> <span class="token punctuation">`</span>sale_price<span class="token punctuation">`</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>sum_price_clothes<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>    <span class="token keyword">case</span> <span class="token keyword">when</span> <span class="token punctuation">`</span>product_type<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">'b'</span>    <span class="token keyword">then</span> <span class="token punctuation">`</span>sale_price<span class="token punctuation">`</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>sum_price_kitchen<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token function">sum</span><span class="token punctuation">(</span>    <span class="token keyword">case</span> <span class="token keyword">when</span> <span class="token punctuation">`</span>product_type<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">'C'</span>    <span class="token keyword">then</span> <span class="token punctuation">`</span>sale_price<span class="token punctuation">`</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span>sum_price_office<span class="token punctuation">`</span><span class="token keyword">from</span> <span class="token punctuation">`</span>product<span class="token punctuation">`</span><span class="token punctuation">;</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;查询基础&quot;&gt;&lt;a href=&quot;#查询基础&quot; class=&quot;headerlink&quot; title=&quot;查询基础&quot;&gt;&lt;/a&gt;查询基础&lt;/h1&gt;&lt;h2 id=&quot;逻辑运算符&quot;&gt;&lt;a href=&quot;#逻辑运算符&quot; class=&quot;headerlink&quot; title=&quot;逻辑运算符&quot;&gt;
      
    
    </summary>
    
      <category term="SQL" scheme="http://sinlapis.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="http://sinlapis.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL技术内幕笔记0x04</title>
    <link href="http://sinlapis.github.io/2019/09/06/MySQL%E6%8A%80%E6%9C%AF%E5%86%85%E5%B9%95%E7%AC%94%E8%AE%B00x04/"/>
    <id>http://sinlapis.github.io/2019/09/06/MySQL技术内幕笔记0x04/</id>
    <published>2019-09-06T01:53:55.000Z</published>
    <updated>2021-03-03T02:50:12.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><h2 id="事务简介"><a href="#事务简介" class="headerlink" title="事务简介"></a>事务简介</h2><h3 id="特性（ACID）"><a href="#特性（ACID）" class="headerlink" title="特性（ACID）"></a>特性（ACID）</h3><ul><li>原子性（Atomicity）：指整个数据库事务是不可分割的工作单位。只有使事务中所有的数据库操作都执行成功，才算整个事务成功。事务中任何一个SQL语句执行失败，已经执行成功的SQL语句也必须撤销，数据库状态应该退回事务前的状态。</li><li>一致性（Consistency）：指事务将数据库从一种状态转变为下一种一致的状态。在事务开始之前和事务结束之后，数据库的完整性约束没有被破坏。</li><li>隔离性（Isolation）：事务的隔离性要求每个读写事务的对象对其他事务的操作对象能互相分离，即该事务提交前对其他事务都不可见，通常使用锁来实现。</li><li>持久性（Durability）：事务一旦提交，其结果就是永久性的。即使发生宕机等故障，数据库也能将数据恢复。</li></ul><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="扁平事务"><a href="#扁平事务" class="headerlink" title="扁平事务"></a>扁平事务</h4><ul><li>是事务中最简单的一种，但在实际生产环境中可能是使用最为频繁的事务。在扁平事务，所有操作都处于同一层次，其由<code>begin work</code>开始，由<code>commit work</code>或<code>rollback work</code>结束，其间的操作是原子的，要么都执行，要么都回滚。</li></ul><h4 id="带保存点的扁平事务"><a href="#带保存点的扁平事务" class="headerlink" title="带保存点的扁平事务"></a>带保存点的扁平事务</h4><ul><li>除了支持扁平事务支持的操作外，允许在事务执行过程中回滚到同一事务中较早的一个状态。这是因为某些事务可能在执行过程中出现错误并不会导致所有的操作都无效，放弃整个事务不合乎要求，开销也太大。</li><li>保存点用来通知系统应该记住事务当前的状态，以便之后发生错误时，事务能够回到保存点当时的状态。</li><li>保存点在事务内部是递增的，不会因为回滚而出现覆盖。</li><li>保存点是易失的，即当发生系统崩溃后进行恢复时，事务需要从开始处重新执行，不能从最近的一个保存点继续。</li></ul><h4 id="链事务"><a href="#链事务" class="headerlink" title="链事务"></a>链事务</h4><ul><li>在提交一个事务时，释放不需要的数据对象，将必要的上下文隐式地传给下一个要开始的事务。提交事务的操作和开始下一个事务的操作将合并为一个原子操作，这意味着下一个事务将看到上一个事务的结果。</li><li>链事务与带保存点的事务不同的是，带保存点的扁平事务能回滚到任意正确的保存点，而链事务中的回滚仅限于当前事务。此外，链事务在执行<code>commit</code>后即释放了当前事务所持有的锁，而带保存点的扁平事务不影响迄今为止所持有的锁。</li></ul><h4 id="嵌套事务"><a href="#嵌套事务" class="headerlink" title="嵌套事务"></a>嵌套事务</h4><ul><li>是一个层次结构框架，由一个顶层事务控制各个层次的事务。顶层事务之下嵌套的事务称为子事务，其控制每一个局部变换。</li></ul><h4 id="分布式事务"><a href="#分布式事务" class="headerlink" title="分布式事务"></a>分布式事务</h4><ul><li>通常是一个在分布式环境下运行的扁平事务，因此需要根据数据所在位置访问网络中的不同节点。</li></ul><h2 id="事务的实现"><a href="#事务的实现" class="headerlink" title="事务的实现"></a>事务的实现</h2><ul><li>redo log用来保证事务的持久性，undo log用来保证事务的一致性。</li><li>redo通常是物理日志，记录的是页的物理修改操作，用于对页进行重做操作。undo是逻辑日志，根据每行记录进行记录，用于对事务进行回滚。</li><li>当事务提交时，必须先将该事务的所有日志写入到redo日志文件进行持久化，待事务的提交成功后才算完成。</li><li>undo存放在数据库内部的一个特殊段中，称为undo段，位于共享表空间内。</li></ul><h2 id="事务的隔离级别"><a href="#事务的隔离级别" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h2><blockquote><ul><li>未提交读(Read Uncommitted)：允许脏读，也就是可能读取到其他会话中未提交事务修改的数据。</li><li>提交读(Read Committed)：只能读取到已经提交的数据。Oracle等多数数据库默认都是该级别 (不重复读)。</li><li>可重复读(Repeated Read)：可重复读。在同一个事务内的查询都是事务开始时刻一致的，InnoDB默认级别。在SQL标准中，该隔离级别消除了不可重复读，但是还存在幻象读。</li><li>串行读(Serializable)：完全串行化的读，每次读都需要获得表级共享锁，读写相互都会阻塞。</li></ul><p><a href="https://www.cnblogs.com/zhoujinyi/p/3437475.html" target="_blank" rel="noopener">原文链接</a></p></blockquote><h2 id="分布式事务-1"><a href="#分布式事务-1" class="headerlink" title="分布式事务"></a>分布式事务</h2><ul><li>XA是一种分布式事务的标准，多数数据库都实现了XA接口。</li><li>XA事务由一个或多个资源管理器、一个事务管理器以及一个应用程序组成。</li><li>资源管理器：提供访问事务资源的方法。通常一个数据库就是一个资源管理器。</li><li>事务管理器：协调参与全局事务中的各个事务。需要和参与全局事务的所有资源管理器进行通信。</li><li>应用程序：定义事务的边界，指定全局事务中的操作。</li><li>分布式事务使用两段式提交。在第一阶段，所有参与全局事务的节点都开始准备，告诉事务管理器它们准备好提交了。在第二阶段，事务管理器告诉资源管理器执行<code>rollback</code>还是<code>commit</code>。如果任何一个节点显示不能提交，在所有节点都被告知需要回滚。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;事务&quot;&gt;&lt;a href=&quot;#事务&quot; class=&quot;headerlink&quot; title=&quot;事务&quot;&gt;&lt;/a&gt;事务&lt;/h1&gt;&lt;h2 id=&quot;事务简介&quot;&gt;&lt;a href=&quot;#事务简介&quot; class=&quot;headerlink&quot; title=&quot;事务简介&quot;&gt;&lt;/a&gt;事务简介&lt;/h
      
    
    </summary>
    
      <category term="数据库" scheme="http://sinlapis.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="http://sinlapis.github.io/tags/MySQL/"/>
    
      <category term="InnoDB" scheme="http://sinlapis.github.io/tags/InnoDB/"/>
    
      <category term="事务" scheme="http://sinlapis.github.io/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer面试题-正则表达式匹配</title>
    <link href="http://sinlapis.github.io/2019/09/05/%E5%89%91%E6%8C%87Offer%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D/"/>
    <id>http://sinlapis.github.io/2019/09/05/剑指Offer面试题-正则表达式匹配/</id>
    <published>2019-09-05T08:06:06.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="正则表达式匹配"><a href="#正则表达式匹配" class="headerlink" title="正则表达式匹配"></a>正则表达式匹配</h1><p>请实现一个函数用来匹配包括<code>.</code>和<code>*</code>的正则表达式。模式中的字符<code>.</code>表示任意一个字符，而<code>*</code>表示它前面的字符可以出现任意次（包含0次）。 在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串<code>aaa</code>与模式<code>a.a</code>和<code>ab*ac*a</code>匹配，但是与<code>aa.a</code>和<code>ab*a</code>均不匹配</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Q19</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">match</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> str<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pattern<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>pattern <span class="token operator">==</span> null <span class="token operator">||</span> str <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">subMatch</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pattern<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">subMatch</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> str<span class="token punctuation">,</span> <span class="token keyword">int</span> strIndex<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pattern<span class="token punctuation">,</span> <span class="token keyword">int</span> patternIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// [1]</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>strIndex <span class="token operator">>=</span> str<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> patternIndex <span class="token operator">>=</span> pattern<span class="token punctuation">.</span>length <span class="token operator">||</span>                    <span class="token punctuation">(</span>patternIndex <span class="token operator">==</span> pattern<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> pattern<span class="token punctuation">[</span>patternIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>patternIndex <span class="token operator">>=</span> pattern<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 匹配单个字符</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>patternIndex <span class="token operator">==</span> pattern<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">||</span> pattern<span class="token punctuation">[</span>patternIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'*'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>pattern<span class="token punctuation">[</span>patternIndex<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.'</span> <span class="token operator">||</span> str<span class="token punctuation">[</span>strIndex<span class="token punctuation">]</span> <span class="token operator">==</span> pattern<span class="token punctuation">[</span>patternIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token function">subMatch</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> strIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> pattern<span class="token punctuation">,</span> patternIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 匹配带*</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>pattern<span class="token punctuation">[</span>patternIndex<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'.'</span> <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">[</span>strIndex<span class="token punctuation">]</span> <span class="token operator">!=</span> pattern<span class="token punctuation">[</span>patternIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token function">subMatch</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> strIndex<span class="token punctuation">,</span> pattern<span class="token punctuation">,</span> patternIndex <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//[2]</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">subMatch</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> strIndex<span class="token punctuation">,</span> pattern<span class="token punctuation">,</span> patternIndex <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//[3]</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>strIndex <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>strIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">!=</span> pattern<span class="token punctuation">[</span>patternIndex<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> pattern<span class="token punctuation">[</span>patternIndex<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'.'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">subMatch</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> strIndex<span class="token punctuation">,</span> pattern<span class="token punctuation">,</span> patternIndex <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Q19 s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Q19</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String str <span class="token operator">=</span> <span class="token string">"bcbbabab"</span><span class="token punctuation">;</span>        String pattern <span class="token operator">=</span> <span class="token string">".*a*a"</span><span class="token punctuation">;</span>        s<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pattern<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ul><li>思路：使用递归。首先是退出条件，如果<code>str</code>和<code>pattern</code>都用完退出返回<code>true</code>，如果仅是<code>pattern</code>用完则返回<code>false</code>。注意[1]处有另一种退出返回<code>true</code>的情况，就是<code>str</code>用完，<code>pattern</code>剩余一个字符和<code>*</code>，此时按匹配0个可以返回<code>true</code>。然后是匹配单个字符，比较简单。最后是匹配带<code>*</code>，注意[2]先进行一次匹配0个，[3]进入循环的条件为<code>str</code>没有用完。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;正则表达式匹配&quot;&gt;&lt;a href=&quot;#正则表达式匹配&quot; class=&quot;headerlink&quot; title=&quot;正则表达式匹配&quot;&gt;&lt;/a&gt;正则表达式匹配&lt;/h1&gt;&lt;p&gt;请实现一个函数用来匹配包括&lt;code&gt;.&lt;/code&gt;和&lt;code&gt;*&lt;/code&gt;的正则表达式。模
      
    
    </summary>
    
      <category term="算法" scheme="http://sinlapis.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Java" scheme="http://sinlapis.github.io/tags/Java/"/>
    
      <category term="剑指Offer" scheme="http://sinlapis.github.io/tags/%E5%89%91%E6%8C%87Offer/"/>
    
      <category term="字符串" scheme="http://sinlapis.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>MySQL技术内幕笔记0x03</title>
    <link href="http://sinlapis.github.io/2019/09/05/MySQL%E6%8A%80%E6%9C%AF%E5%86%85%E5%B9%95%E7%AC%94%E8%AE%B00x03/"/>
    <id>http://sinlapis.github.io/2019/09/05/MySQL技术内幕笔记0x03/</id>
    <published>2019-09-05T01:06:50.000Z</published>
    <updated>2021-03-03T02:50:12.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h1><h2 id="锁简介"><a href="#锁简介" class="headerlink" title="锁简介"></a>锁简介</h2><ul><li>锁是数据库区别于文件系统的一个关键特性。数据库系统使用锁是为了支持对共享资源进行并发访问，提供数据的完整性和一致性。</li></ul><h2 id="lock与latch"><a href="#lock与latch" class="headerlink" title="lock与latch"></a>lock与latch</h2><ul><li>latch一般成为闩锁（轻量级锁），因为其要求锁定的时间必须非常短。若持续时间长，则应用的性能会非常差。其目的是保证并发线程操作临界资源的正确性，并且通常没有死锁检测机制。在InnoDB中，latch又可以分为mutex（互斥锁）和rwlock（读写锁）。 </li><li>lock的对象是是事务，用来锁定的是数据库中的对象，如表、页、行。一般lock的对象仅在事务commit或rollback后进行释放（不同事务隔离级别释放的时间可能不同）。此外，lock是有死锁机制的。</li></ul><h2 id="InnoDB存储引擎中的锁"><a href="#InnoDB存储引擎中的锁" class="headerlink" title="InnoDB存储引擎中的锁"></a>InnoDB存储引擎中的锁</h2><h3 id="锁的类型"><a href="#锁的类型" class="headerlink" title="锁的类型"></a>锁的类型</h3><ul><li>InnoDB实现了如下两种标准的行级锁：<ul><li>共享锁（S Lock），允许事务读一行数据。</li><li>排他锁（X Lock），允许事务删除或更新一行数据。</li></ul></li><li>InnoDB支持多粒度锁定，这种锁定允许事务在行级锁与表级锁同时存在。为了支持在不同粒度上进行加锁操作，InnoDB支持一种额外的锁方式，称之为意向锁。意向锁是将锁定的对象分为多个层次，意向锁意味着事务希望在更细粒度上进行加锁。InnoDB支持两种意向锁：<ul><li>意向共享锁（IS Lock），事务想要夺得一张表中某几行的共享锁。</li><li>意向排他锁（IX Lock），事务想要获得一张表中某几行的排他锁。</li></ul></li><li>意向锁不会阻塞除全表扫描以外的任何请求。表级意向锁之间互相兼容，IS与S兼容，S与S兼容，其他情况都不兼容。</li></ul><h3 id="一致性非锁定读"><a href="#一致性非锁定读" class="headerlink" title="一致性非锁定读"></a>一致性非锁定读</h3><ul><li>一致性非锁定读是指InnoDB通过行的多版本控制的方式来读取当前数据库中行的数据。如果读取的行正在执行delete或update操作，这时读取操作不会因此去等待行锁释放，而是去读取行的快照数据。该操作实现是通过undo段来完成的，而undo用来在事务中回滚数据，因此快照数据本身是没有额外开销的。此外，读取快照数据是不需要上锁的，因为没有事务需要对历史数据进行修改。由此，非锁定读机制极大地提高了数据库的并发性。</li></ul><h3 id="一致性锁定读"><a href="#一致性锁定读" class="headerlink" title="一致性锁定读"></a>一致性锁定读</h3><ul><li>InnoDB对于select语句支持两种一致性锁定读操作，一种是<code>select ... for update</code>，对读取的行记录加一个X锁，其他事务不能对已锁定的行加上任何锁。另一种是<code>select ... lock in share mode</code>，对读取的行记录加一个S锁，其他事务可以向被锁定的行加S锁，但是如果加X锁则会被阻塞。</li></ul><h2 id="锁的算法"><a href="#锁的算法" class="headerlink" title="锁的算法"></a>锁的算法</h2><h3 id="行锁的3种算法"><a href="#行锁的3种算法" class="headerlink" title="行锁的3种算法"></a>行锁的3种算法</h3><ul><li>Record Lock：单个行记录上锁。总是会去锁住索引记录，如果表在建立时没有设置索引，那么InnoDB会使用隐式的主键来进行锁定。</li><li>Gap Lock：间隙锁，锁定一个范围，但不包含记录本身。</li><li>Next-Key Lock：Gap Lock+Record Lock，锁定一个范围，并且锁定记录本身。InnoDB对于行的查询都是采用这种锁定算法。其设计的目的是为了解决幻象问题。</li><li>当查询的索引含有唯一属性时，InnoDB会对Next-Key Lock进行优化，将其降级为Record Lock，即仅锁住记录，从而提高并发性。</li></ul><h3 id="解决幻象问题"><a href="#解决幻象问题" class="headerlink" title="解决幻象问题"></a>解决幻象问题</h3><ul><li>幻象问题是指，在同一事务下，连续执行两次相同的SQL语句可能得到不同的结果，第二次SQL语句可能会返回之前不存在的的行。</li></ul><h2 id="锁问题"><a href="#锁问题" class="headerlink" title="锁问题"></a>锁问题</h2><h3 id="脏读"><a href="#脏读" class="headerlink" title="脏读"></a>脏读</h3><ul><li>脏数据是指事务对缓冲池中行记录的修改，并且还没有被提交。</li><li>脏读是指在不同事务下，当前事务可以读到其他事务未提交的数据，即脏数据。</li></ul><h3 id="不可重复读"><a href="#不可重复读" class="headerlink" title="不可重复读"></a>不可重复读</h3><ul><li>不可重复读是指，在同一个事务中多次读取同一数据集合，但是存在两次结果不一致的情况。</li><li>不可重复读和脏读的区别是，脏读得到的是未提交的数据，而不可重复读得到的是已经提交的数据，但是其违反了数据库事务一致性的要求。</li><li>不可重复读的问题是可以接受的，因为其读到的是已经提交的数据，本身不会带来很大问题。</li></ul><h3 id="丢失更新"><a href="#丢失更新" class="headerlink" title="丢失更新"></a>丢失更新</h3><ul><li>丢失更新是指有些事务的更新操作被另一个事务的更新操作所覆盖，从而导致数据的不一致，例如：<ol><li>事务t1将行记录r更新为v1，但是t1没有提交</li><li>事务t2将行记录r更新为v2，但是t2没有提交</li><li>t1提交</li><li>t2提交</li></ol></li><li>要避免丢失更新发生，需要让事务在这种情况下的操作变成串行化。在1.和2.中分别加上一个X锁，据此，2.需要等待1.和3.结束才能执行。</li></ul><h2 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h2><ul><li>死锁是指两个及以上的事务在执行过程中，因竞争锁资源而造成的一种互相等待的现象。</li><li>解决死锁最简单的方式是不要有等待，让任何等待都转化为回滚，并且事务重新开始。但是这种方式可能导致并发性能下降，而这所带来的问题更为严重，因为很难被发现并且浪费资源。</li><li>解决死锁的一种方法是超时，即当两个事务互相等待时，当一个等待时间超过设置的某一阈值时，其中一个事务进行回滚，另一个等待事务就能继续进行。</li><li>当前数据库普遍采用等待图的方法进行死锁检测，这是一种更为主动的检测方法，主要包括锁的信息链表和事务的等待链表，以及两者构造的图，如果这张图中存在回路，就代表存在死锁。检测算法通常采用深度优先算法实现。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;锁&quot;&gt;&lt;a href=&quot;#锁&quot; class=&quot;headerlink&quot; title=&quot;锁&quot;&gt;&lt;/a&gt;锁&lt;/h1&gt;&lt;h2 id=&quot;锁简介&quot;&gt;&lt;a href=&quot;#锁简介&quot; class=&quot;headerlink&quot; title=&quot;锁简介&quot;&gt;&lt;/a&gt;锁简介&lt;/h2&gt;&lt;ul&gt;
&lt;
      
    
    </summary>
    
      <category term="数据库" scheme="http://sinlapis.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="http://sinlapis.github.io/tags/MySQL/"/>
    
      <category term="InnoDB" scheme="http://sinlapis.github.io/tags/InnoDB/"/>
    
      <category term="锁" scheme="http://sinlapis.github.io/tags/%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer面试题-删除链表节点</title>
    <link href="http://sinlapis.github.io/2019/09/04/%E5%89%91%E6%8C%87Offer%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E8%8A%82%E7%82%B9/"/>
    <id>http://sinlapis.github.io/2019/09/04/剑指Offer面试题-删除链表节点/</id>
    <published>2019-09-04T08:21:23.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="删除链表节点"><a href="#删除链表节点" class="headerlink" title="删除链表节点"></a>删除链表节点</h1><h2 id="在O-1-时间内删除链表节点"><a href="#在O-1-时间内删除链表节点" class="headerlink" title="在O(1)时间内删除链表节点"></a>在O(1)时间内删除链表节点</h2><p>给定单向链表的头指针和一个节点指针，定义一个函数在O(1)时间内删除该节点。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> value<span class="token punctuation">;</span>    Node next<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> Node <span class="token function">solute</span><span class="token punctuation">(</span>Node head<span class="token punctuation">,</span> Node p<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>next <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            p<span class="token punctuation">.</span>value <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">.</span>value<span class="token punctuation">;</span>            p<span class="token punctuation">.</span>next <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            <span class="token keyword">return</span> head<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            Node next <span class="token operator">=</span> head<span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>next<span class="token punctuation">.</span>next <span class="token operator">!=</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>                next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            next<span class="token punctuation">.</span>next <span class="token operator">=</span> null<span class="token punctuation">;</span>            <span class="token keyword">return</span> head<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ul><li>思路：把要删除的节点的下一个节点的值覆盖到当前节点上，再删除下一个节点。注意需要判断要删除节点是否为尾节点，以及链表中是否只有一个节点。</li></ul><h2 id="删除排序链表中重复的节点"><a href="#删除排序链表中重复的节点" class="headerlink" title="删除排序链表中重复的节点"></a>删除排序链表中重复的节点</h2><p>在一个排序的链表中，存在重复的结点，请删除该链表中重复的结点，重复的结点不保留，返回链表头指针。 例如，链表1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5 处理后为 1-&gt;2-&gt;5</p><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> value<span class="token punctuation">;</span>    Node next<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> Node <span class="token function">solute</span><span class="token punctuation">(</span>Node head<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token keyword">boolean</span> deleteHead <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">.</span>next <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> head<span class="token punctuation">.</span>value <span class="token operator">==</span> head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>value<span class="token punctuation">)</span> deleteHead <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        Node last <span class="token operator">=</span> head<span class="token punctuation">;</span>        Node next <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token keyword">int</span> lastValue <span class="token operator">=</span> head<span class="token punctuation">.</span>value<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>next <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>next<span class="token punctuation">.</span>value <span class="token operator">==</span> lastValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>                last<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                lastValue <span class="token operator">=</span> next<span class="token punctuation">.</span>value<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>next<span class="token punctuation">.</span>next <span class="token operator">==</span> null <span class="token operator">||</span> next<span class="token punctuation">.</span>next<span class="token punctuation">.</span>value <span class="token operator">!=</span> lastValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    last <span class="token operator">=</span> last<span class="token punctuation">.</span>next<span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    last<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>deleteHead<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>head<span class="token punctuation">.</span>next <span class="token operator">==</span> null <span class="token operator">||</span> head<span class="token punctuation">.</span>value <span class="token operator">!=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token keyword">return</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>                head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> head<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ul><li>思路：如要删除头节点最后处理（头指针向下到第一个值不同的节点），中间节点保存上一个值，如果重复则<code>next</code>直接向下，如果<code>next</code>的值发生变动则进行预判，相同则直接向下并更新上一个值，否则<code>last</code>向下。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;删除链表节点&quot;&gt;&lt;a href=&quot;#删除链表节点&quot; class=&quot;headerlink&quot; title=&quot;删除链表节点&quot;&gt;&lt;/a&gt;删除链表节点&lt;/h1&gt;&lt;h2 id=&quot;在O-1-时间内删除链表节点&quot;&gt;&lt;a href=&quot;#在O-1-时间内删除链表节点&quot; class=&quot;
      
    
    </summary>
    
      <category term="数据结构" scheme="http://sinlapis.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="Java" scheme="http://sinlapis.github.io/tags/Java/"/>
    
      <category term="剑指Offer" scheme="http://sinlapis.github.io/tags/%E5%89%91%E6%8C%87Offer/"/>
    
      <category term="链表" scheme="http://sinlapis.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer面试题-打印从1到最大的n位数</title>
    <link href="http://sinlapis.github.io/2019/09/04/%E5%89%91%E6%8C%87Offer%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%89%93%E5%8D%B0%E4%BB%8E1%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84n%E4%BD%8D%E6%95%B0/"/>
    <id>http://sinlapis.github.io/2019/09/04/剑指Offer面试题-打印从1到最大的n位数/</id>
    <published>2019-09-04T07:45:18.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="打印从1到最大的n位数"><a href="#打印从1到最大的n位数" class="headerlink" title="打印从1到最大的n位数"></a>打印从1到最大的n位数</h1><p>输入数字n，按顺序打印从1到最大的n位数十进制数。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    StringBuilder num <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> lastCount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token function">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        num<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">boolean</span> c <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'9'</span><span class="token punctuation">)</span> num<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> <span class="token punctuation">{</span>                    num<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    c <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span> num<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">increase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        lastCount<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>lastCount <span class="token operator">>=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            lastCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            num<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> num<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">solute</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>        Solution solution <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>solution<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>            solution<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            solution<span class="token punctuation">.</span><span class="token function">increase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ul><li>思路：使用书中第一种解法。使用<code>StringBuilder</code>更加方便。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;打印从1到最大的n位数&quot;&gt;&lt;a href=&quot;#打印从1到最大的n位数&quot; class=&quot;headerlink&quot; title=&quot;打印从1到最大的n位数&quot;&gt;&lt;/a&gt;打印从1到最大的n位数&lt;/h1&gt;&lt;p&gt;输入数字n，按顺序打印从1到最大的n位数十进制数。&lt;/p&gt;
&lt;pre
      
    
    </summary>
    
      <category term="算法" scheme="http://sinlapis.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Java" scheme="http://sinlapis.github.io/tags/Java/"/>
    
      <category term="剑指Offer" scheme="http://sinlapis.github.io/tags/%E5%89%91%E6%8C%87Offer/"/>
    
      <category term="大数" scheme="http://sinlapis.github.io/tags/%E5%A4%A7%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer面试题-数值的整数次方</title>
    <link href="http://sinlapis.github.io/2019/09/02/%E5%89%91%E6%8C%87Offer%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E6%96%B9/"/>
    <id>http://sinlapis.github.io/2019/09/02/剑指Offer面试题-数值的整数次方/</id>
    <published>2019-09-02T08:39:01.000Z</published>
    <updated>2021-03-03T02:50:12.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数值的整数次方"><a href="#数值的整数次方" class="headerlink" title="数值的整数次方"></a>数值的整数次方</h1><p>给定一个double类型的浮点数base和int类型的整数exponent。求base的exponent次方。保证base和exponent不同时为0。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> <span class="token function">unsignedPower</span><span class="token punctuation">(</span><span class="token keyword">double</span> base<span class="token punctuation">,</span> <span class="token keyword">int</span> exponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>exponent <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>exponent <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> base<span class="token punctuation">;</span>        <span class="token keyword">double</span> result <span class="token operator">=</span> <span class="token function">unsignedPower</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span> exponent <span class="token operator">>></span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result <span class="token operator">*=</span> result<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>exponent <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> result <span class="token operator">*=</span> base<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">Power</span><span class="token punctuation">(</span><span class="token keyword">double</span> base<span class="token punctuation">,</span> <span class="token keyword">int</span> exponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>base <span class="token operator">==</span> <span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0.0</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>exponent <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1.0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> exp <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>exponent<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> result <span class="token operator">=</span> <span class="token function">unsignedPower</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span> exp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>exponent <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> result <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> result<span class="token punctuation">;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ul><li>思路：求<code>a^n</code>，先求<code>a^(n/2)</code>，然后平方，依次递归。注意指数为负数、0以及底数为0.0的情况。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数值的整数次方&quot;&gt;&lt;a href=&quot;#数值的整数次方&quot; class=&quot;headerlink&quot; title=&quot;数值的整数次方&quot;&gt;&lt;/a&gt;数值的整数次方&lt;/h1&gt;&lt;p&gt;给定一个double类型的浮点数base和int类型的整数exponent。求base的expone
      
    
    </summary>
    
      <category term="算法" scheme="http://sinlapis.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="Java" scheme="http://sinlapis.github.io/tags/Java/"/>
    
      <category term="剑指Offer" scheme="http://sinlapis.github.io/tags/%E5%89%91%E6%8C%87Offer/"/>
    
      <category term="数学" scheme="http://sinlapis.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
</feed>
